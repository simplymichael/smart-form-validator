{"version":3,"file":"smart-form-validator.js","sources":["../../src/error-messages.js","../../src/helpers.js","../../src/methods/index.js","../../src/effects/effects-helpers.js","../../src/effects/add-bottom-border/index.js","../../src/effects/add-validation-status-icons/index.js","../../src/effects/toggle-submit-button/index.js","../../src/effects/index.js","../../src/validators/validator-helpers.js","../../src/validators/alphanumeric-validator.js","../../src/validators/alpha-validator.js","../../src/validators/ascii-text-validator.js","../../src/validators/email-validator.js","../../src/validators/length-validator.js","../../src/validators/number-validator.js","../../src/validators/regex-validator.js","../../src/validators/required-field-validator.js","../../src/validators/index.js","../../src/smart-field.js","../../src/methods/addField.js","../../src/smart-form.js","../../src/smart-form-validator.js","../../src/index.js","../../src/index.js?commonjs-entry"],"sourcesContent":["module.exports = {\n  argNamesAreReserved: \"The following :argNames: are reserved and cannot be used as :argTypes:: \\n:argValues:\",\n  fieldCannotBeEmpty: \"The `:field:` field expects a non-empty :type:\",\n  fieldNotRegistered: \"No field with the specified id (\\\":id:\\\") has been registered on this :element:\",\n  functionParamExpectsType: \"The `:param:` argument expects :type:\",\n  functionParamIsRequired: \"The `:param:` argument is required\",\n  htmlElementExpected: \"The `:param:` argument expects an HTML `:elementType:` element\",\n  noObjectWithSpecifiedKey: \"No :object: with the key `:key:` exists\",\n  noEffectsActive: \"There are no active effects set on this field. \\n\" +\n    \"You can set an effect by calling `useEffect(effect)`\",\n  noValidatorsActive: \"There are no active validators for this field. \" +\n    \"You can do one of the following to fix this issue: \" + \n    \"1. Re-enable any disabled validators by calling `enableValidator(key)` \\n\" + \n    \"2. Add a rule using the `addRule(rule)` method \\n\" +\n    \"3. Add a validator using the `addValidator(key, validator, meta)` method\",\n  objectPropertyCannotBeEmpty: \"The `:prop:` property of the `:object:` object cannot be empty\",\n  objectMustHaveProperty: \"The `:param:` argument must have a `:prop:` property\",\n  objectsMustHaveProperty: \"The `:paramA:` argument must have a `:propA:` property or The `:paramB:` argument must have a `:propB:` property\",\n  objectPropertyShouldHaveType: \"The `:prop:` property of the `:object:` object shoulde be :type:\",\n  objectWithKeyExists: \":object: with key `:key:` already exists\",\n  objectWithKeyExistsCanReplace: \":object: with key `:key:` already exists. Use `:replacer:` to replace it.\",\n  unknownType: \"Unknown :type:: `:typeName:`, allowed :types: are: :allowedTypes:\",\n};","\"use strict\";\n\nconst errorMessages = require(\"./error-messages\");\n\nconst APP_CLASSNAME = \"sfv\";\nconst SMART_FIELD_CLASSNAME = \"sfv-sf\";\nconst DISABLED_FIELD_CLASSNAME = \"sfv-disabled\";\nconst VALID_FIELD_CLASSNAME = \"sfv-ok\";\nconst INVALID_FIELD_CLASSNAME = \"sfv-error\";\n\nconst is = {\n  array: isArray,\n  function: isFunction,\n  number: isNumber,\n  object: isObject,\n  string: isString,\n};\n\nconst object = {\n  clone,\n  cloneAndExtend,\n  has: objectHas,\n};\n\n// eslint-disable-next-line\nmodule.exports = {\r\n  is,\n  object,\n  createListFromArray,\n  generateEffectName,\n  getEffectNames,\n  getValidatorNames,\n  isSubmitBtn,\n  normalizeId,\n  preEffectRegistrationCheck,\n  preValidatorRegistrationCheck,\n  validateId,\n  APP_CLASSNAME,\n  DISABLED_FIELD_CLASSNAME,\n  SMART_FIELD_CLASSNAME,\n  VALID_FIELD_CLASSNAME,\n  INVALID_FIELD_CLASSNAME,\n};\n\nfunction isArray(data) {\n  return Array.isArray(data);\n}\n\nfunction isFunction(data) {\n  return typeof data === \"function\";\n}\n\nfunction isNumber(num) {\n  num = Number(num);\n\n  return typeof num === \"number\" && !Number.isNaN(num);\n}\n\nfunction isObject(data) {\n  return (typeof data === \"object\" && data && !isArray(data));\n}\n\nfunction isString(data) {\n  return typeof data === \"string\";\n}\n\nfunction objectHas(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction clone(obj) {\n  return isObject(obj) ? Object.assign({}, obj) : obj;\n}\n\nfunction cloneAndExtend(obj, newProps) {\n  if(isObject(obj) && isObject(newProps)) {\n    return Object.assign(clone(obj), newProps);\n  } else {\n    return obj;\n  }\n}\n\nfunction createListFromArray(array, combinator) {\n  if(typeof combinator !== \"string\") {\n    combinator = \"\\t\\n* \";\n  }\n\n  return `${combinator}${array.join(combinator)}`;\n}\n\nfunction generateEffectName(name, namespace) {\n  name = is.string(name) ? name.trim() : \"\";\n  namespace = is.string(namespace) ? namespace.trim() : \"\";\n\n  if(name.length > 0 && namespace.length > 0) {\n    return `${namespace}.${name}`;\n  } else if(name.length > 0) {\n    return name;\n  } else {\n    return \"\";\n  }\n}\n\nfunction getEffectNames(effects) {\n  const effectObjects = Object.values(effects);\n  const effectNames = effectObjects.map(effect => effect.name);\n\n  return effectNames;\n}\n\nfunction getValidatorNames(validators) {\n  return Object.keys(validators);\n}\n\nfunction isSubmitBtn(element) {\n  return element.type === \"submit\" || element.role === \"submit-button\";\n}\n\nfunction normalizeId(id) {\n  return String(id).trim();\n}\n\nfunction preEffectRegistrationCheck(effect, defaultEffectNames) {\n  if(!(is.object(effect))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"effect\")\n        .replace(\":type:\", \"an object\")\n    );\n  }\n\n  let { name, meta, valid, invalid } = effect;\n\n  if(!(is.string(name))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"effect.name\")\n        .replace(\":type:\", \"a string\")\n    );\n  }\n\n  let namespace = \"\";\n  name = name.trim();\n\n  if(!(is.function(valid))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"effect.valid\")\n        .replace(\":type:\", \"a function\")\n    );\n  }\n\n  if(!(is.function(invalid))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"effect.invalid\")\n        .replace(\":type:\", \"a function\")\n    );\n  }\n\n  if(is.object(meta) && is.string(meta.namespace)) {\n    namespace = meta.namespace.trim();\n  }\n\n  const effectName = generateEffectName(name, namespace);\n\n  if(effectName.length === 0) {\n    throw new TypeError(\n      errorMessages.fieldCannotBeEmpty\n        .replace(\":field:\", \"effect.name\")\n        .replace(\":type:\", \"string\")\n    );\n  }\n\n  if(defaultEffectNames.includes(effectName)) {\n    throw new TypeError(\n      errorMessages.argNamesAreReserved\n        .replace(\":argNames:\", \"names\")\n        .replace(\":argTypes:\", \"effect names\")\n        .replace(\":argValues:\", createListFromArray(defaultEffectNames))\n    );\n  }\n\n  return { ...effect, name: effectName };\n}\n\nfunction preValidatorRegistrationCheck(validatorKey, validatorFn, validatorMeta, defaultValidatorKeys) {\n  if(!(is.string(validatorKey))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"validatorKey\")\n        .replace(\":type:\", \"a string\")\n    );\n  }\n\n  let validatorNamespace = \"\";\n\n  validatorKey = validatorKey.trim();\n\n  if(!validatorKey) {\n    throw new TypeError(\n      errorMessages.fieldCannotBeEmpty\n        .replace(\":field:\", \"validatorKey\")\n        .replace(\":type:\", \"string\"));\n  }\n\n  if(is.object(validatorMeta) && is.string(validatorMeta.namespace)) {\n    validatorNamespace = validatorMeta.namespace.trim();\n  }\n\n  validatorKey = generateValidatorKey(validatorKey, validatorNamespace);  \n\n  if(defaultValidatorKeys.includes(validatorKey)) {\n    throw new TypeError(\n      errorMessages.argNamesAreReserved\n        .replace(\":argNames:\", \"keys\")\n        .replace(\":argTypes:\", \"validator keys\")\n        .replace(\":argValues:\", createListFromArray(defaultValidatorKeys))\n    );\n  }\n\n  if(!(is.function(validatorFn))) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"validatorFn\")\n        .replace(\":type:\", \"a function\")\n    );\n  }\n\n  return validatorKey;\n}\n\nfunction validateId(id) {\n  return [\"number\", \"string\"].includes(typeof id) && Boolean(id);\n}\n\n\n// Helpers \nfunction generateValidatorKey(key, namespace) {\n  if(key.length > 0 && namespace.length > 0) {\n    return `${namespace}.${key}`;\n  } else if(key.length > 0) {\n    return key;\n  } else {\n    return \"\";\n  }\n}","const errorMessages = require(\"../error-messages\");\nconst { createListFromArray } = require(\"../helpers\");\n\nconst instanceMethodNames = [\n  \"addField\",\n  \"addFields\",\n  \"addRule\",\n  \"addValidator\", \n  \"getValidators\",\n  \"getEffects\",\n  \"getField\",\n  \"getFields\",\n  \"removeRule\",\n  \"reset\",\n  \"toJSON\",\n  \"useEffect\",\n  \"validate\",\n  \"watch\",\n];\n\nconst staticMethodNames = [\"getEffects\", \"useEffect\"];\n\nmodule.exports = { \n  addInstanceMethod,\n  addStaticMethod,\n};\n\n\n/**\n * \n * @param {Function} ctor: a constructor function \n * @param {String} methodName: the method name to bind to instances of that constructor\n */\nfunction addInstanceMethod(ctor, methodName) {\n  if(typeof ctor !== \"function\") {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"ctor\")\n        .replace(\":type:\", \"(constructor) function\")\n    );\n  }\n\n  if(!instanceMethodNames.includes(methodName)) {\n    throw new TypeError(\n      errorMessages.unknownType\n        .replace(\":type:\", \"instance method\")\n        .replace(\":typeName:\", methodName)\n        .replace(\":types:\", \"methods\")\n        .replace(\":allowedTypes:\", createListFromArray(instanceMethodNames))\n    );\n  }\n\n  ctor.prototype[methodName] = require(`./${methodName}`);\n}\n\n/**\n * \n * @param {Function} ctor: a constructor function \n * @param {String} methodName: the method name to bind as a static member to the constructor\n */\nfunction addStaticMethod(ctor, methodName) {\n  if(typeof ctor !== \"function\") {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"ctor\")\n        .replace(\":type:\", \"(constructor) function\")\n    );\n  }\n  \n  if(!staticMethodNames.includes(methodName)) {\n    throw new TypeError(\n      errorMessages.unknownType\n        .replace(\":type:\", \"static method\")\n        .replace(\":typeName:\", methodName)\n        .replace(\":types:\", \"methods\")\n        .replace(\":allowedTypes:\", createListFromArray(staticMethodNames))\n    );\n  }\n  \n  ctor[methodName] = require(`./${methodName}`);\n}","const { is } = require(\"../helpers\");\n\n\nmodule.exports = {\n  isSubmitButton,\n};\n\n\nfunction isSubmitButton(element) {\n  return (\n    is.object(element) && (element.type === \"submit\" || element.role === \"submit-button\")\n  );\n}","const { is, VALID_FIELD_CLASSNAME, INVALID_FIELD_CLASSNAME } = require(\"../../helpers\");\nconst { isSubmitButton } = require(\"../effects-helpers\");\n\nmodule.exports = {\n  name: \"addBottomBorder\",\n  meta: {},\n  valid: handleValid,\n  invalid: handleInvalid,\n};\n\nfunction handleValid(field) {\n  if(!(is.object(field)) || isSubmitButton(field)) {\n    return;\n  }\n\n  field.classList.remove(INVALID_FIELD_CLASSNAME);\n  field.classList.add(VALID_FIELD_CLASSNAME);\n}\n  \nfunction handleInvalid(field) {\n  if(!(is.object(field)) || isSubmitButton(field)) {\n    return;\n  }\n\n  field.classList.remove(VALID_FIELD_CLASSNAME);\n  field.classList.add(INVALID_FIELD_CLASSNAME);\n}","const { is, VALID_FIELD_CLASSNAME, INVALID_FIELD_CLASSNAME } = require(\"../../helpers\");\nconst { isSubmitButton } = require(\"../effects-helpers\");\n\n\nmodule.exports = {\n  name: \"addValidationStatusIcons\",\n  meta: {},\n  valid: handleValid,\n  invalid: handleInvalid,\n};\n\n\nfunction handleValid(field) {\n  if(!(is.object(field)) || isSubmitButton(field)) {\n    return;\n  }\n\n  field.classList.remove(INVALID_FIELD_CLASSNAME);\n  field.classList.add(VALID_FIELD_CLASSNAME);\n}\n  \nfunction handleInvalid(field) {\n  if(!(is.object(field)) || isSubmitButton(field)) {\n    return;\n  }\n\n  field.classList.remove(VALID_FIELD_CLASSNAME);\n  field.classList.add(INVALID_FIELD_CLASSNAME);\n}","const { APP_CLASSNAME, DISABLED_FIELD_CLASSNAME } = require(\"../../helpers\");\nconst { isSubmitButton } = require(\"../effects-helpers\");\n\n\nmodule.exports = {\n  name: \"toggleSubmitButton\",\n  meta: {},\n  init,\n  valid: handleValid,\n  invalid: handleInvalid,\n};\n\n\nfunction init(field) {\n  // Initially disable the submit button\n  canSubmitForm(false, field);\n}\n\nfunction handleValid(field) {\n  canSubmitForm(true, field);\n}\n  \nfunction handleInvalid(field) {\n  canSubmitForm(false, field);\n}\n\n\n// Helper methods\nfunction canSubmitForm(validationPassed, input) {\n  try {\n    if(!isSubmitButton(input)) {\n      return;\n    }\n\n    const submitBtn = input;\n\n    if(validationPassed) {\n      submitBtn.removeAttribute(\"disabled\");\n      submitBtn.classList.remove(APP_CLASSNAME);\n      submitBtn.classList.remove(DISABLED_FIELD_CLASSNAME);\n    } else {\n      submitBtn.setAttribute(\"disabled\", true);\n      submitBtn.classList.add(APP_CLASSNAME);\n      submitBtn.classList.add(DISABLED_FIELD_CLASSNAME);\n    }\n  } catch(e) {\n    console.log(\"Unable to modify the submit button state: \", e.message);\n  }\n}\n","module.exports = {\n  addBottomBorder: require(\"./add-bottom-border\"),\n  addValidationStatusIcons: require(\"./add-validation-status-icons\"),\n  toggleSubmitButton: require(\"./toggle-submit-button\"),\n};","const { is, object } = require(\"../helpers\");\n\nconst regexRules = [\"g\", \"m\"];\n\nmodule.exports = {\n  createAlphanumericRegexObject,\n  getLengthRegex,\n  getRegexRules,\n};\n\nfunction createAlphanumericRegexObject(regexStr, rule, emptyLengthCharacter) {\n  let lenRegex;\n  \n  if(rule.length) {\n    lenRegex = getLengthRegex(rule.length);\n  } else {\n    lenRegex = emptyLengthCharacter || \"+\";\n  }\n  \n  regexStr = `${regexStr}${lenRegex}`;\n  regexStr = `^${regexStr}$`;\n  \n  return new RegExp(regexStr, getRegexRules(rule.matchCase));\n}\n  \nfunction getLengthRegex(lengthRule) {\n  let regexStr;\n  const len = object.clone(lengthRule) || {};\n  \n  if(len.min && len.max) {\n    if(Number(len.min) > Number(len.max)) {\n      const tmp = len.min;\n  \n      len.min = len.max;\n      len.max = tmp;\n    }\n  \n    regexStr = `{${len.min},${len.max}}`;\n  } else if(len.min) {\n    regexStr = `{${len.min},}`;\n  } else if(len.max) {\n    regexStr = `{0,${len.max}}`;\n  } else if(is.number(len)) {\n    regexStr = `{0,${len}}`;\n  }\n  \n  return regexStr;\n}\n  \nfunction getRegexRules(matchCase) {\n  if(matchCase) {\n    return regexRules.join(\"\");\n  } else {\n    return [...regexRules, \"i\"].join(\"\");\n  }\n}","const { createAlphanumericRegexObject } = require(\"./validator-helpers\");\n\n/**\n* Validate that a string contains only alphanumeric characters, _ (underscore), or - (hyphen). \n* @param {String} value (required): The string to validate\n* @param {Object} rule (required): Object containing the requirements for the value to be valid.\n* @param {String} [rule.type]: the expected type of the value.\n* @param {Boolean} [rule.allowWhitespace] (optional): specifies whether to allow whitespace or not.\n* @param {Boolean} [rule.matchCase]: true for case-sensitive validation, false for case-insensitive validation.\n* @returns {Boolean}\n*/\nmodule.exports = function alphanumericValidator(value, rule) {\n  if(!rule.type || rule.type !== \"alnum\") {\n    return true; // if the \"alnum\" rule has not been defined for this value, bypass this validator\n  }\n\n  if(!value) {\n    return false;\n  }\n\n  const regexStr = rule.allowWhitespace ? \"[A-Z0-9\\\\s_-]\" : \"[A-Z0-9_-]\";\n  const regex = createAlphanumericRegexObject(regexStr, rule);\n\n  return regex.test(value);\n};","const { createAlphanumericRegexObject } = require(\"./validator-helpers\");\n\n/**\n * Validate that a string contains only the characters A - Z, _ (underscore), or - (hyphen). \n * @param {String} value (required): The string to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {String} [rule.type]: the expected type of the value.\n * @param {Boolean} [rule.allowWhitespace] (optional): specifies whether to allow whitespace or not.\n * @param {Boolean} [rule.matchCase]: true for case-sensitive validation, false for case-insensitive validation.\n * @returns {Boolean}\n */\nmodule.exports = function alphaValidator(value, rule) {\n  if(!rule.type || rule.type !== \"alpha\") {\n    return true; // if the \"alpha\" rule has not been defined for this value, bypass this validator\n  }\n\n  if(!value || typeof value !== \"string\") {\n    return false;\n  }\n  \n  const regexStr = rule.allowWhitespace ? \"[A-Z\\\\s_-]\" : \"[A-Z_-]\";\n  const regex = createAlphanumericRegexObject(regexStr, rule);\n  \n  return regex.test(value);\n};","const { createAlphanumericRegexObject } = require(\"./validator-helpers\");\n\n/**\n * Validate that a string contains only ascii text characters. \n * @param {String} value (required): The string to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {String} [rule.type]: the expected type of the value.\n * @param {Boolean} [rule.matchCase]: true for case-sensitive validation, false for case-insensitive validation.\n * @returns {Boolean}\n */\nmodule.exports = function asciiTextValidator(value, rule) {\n  if(!rule.type || rule.type !== \"ascii\") {\n    return true; // if the \"ascii\" rule has not been defined for this value, bypass this validator\n  }\n\n  if(!value) {\n    return false;\n  }\n  \n  const regexStr = \"[A-Z0-9`~!@#$%^&*()-+=\\\\[\\\\]{}\\\\\\\\;:'\\\"|<>?\\\\,\\\\.?\\\\/\\\\s_-]\"; // \\\\\\\\ = support for backward slash\n  const regex = createAlphanumericRegexObject(regexStr, rule);\n  \n  return regex.test(value);\n};","// Credits: https://github.com/manishsaraan/email-validator/blob/master/index.js\n//\n// Thanks to:\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\n// https://en.wikipedia.org/wiki/Email_address  The format of an email address is local-part@domain, where the \n// local part may be up to 64 octets long and the domain may have a maximum of 255 octets.[4]\n//\n\nconst regex = /^[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\n/**\n * Validate that a string is an email.\n * @param {String} value (required): The value to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {String} [rule.type]: the expected type of the value.\n * @returns {Boolean}\n */\nmodule.exports = function emailValidator(value, rule) {\n  if(!rule.type || rule.type !== \"email\") {\n    return true; // if the \"email\" rule has not been defined for this value, bypass this validator\n  }\n\n  if(!value || typeof value !== \"string\") {\n    return false;\n  }\n  \n  const emailParts = value.split(\"@\");\n  \n  if(emailParts.length !== 2) {\n    return false;\n  }\n  \n  const [account, address] = emailParts;\n  \n  if(account.length > 64 || address.length > 255) {\n    return false;\n  }\n  \n  const domainParts = address.split(\".\");\n    \n  if(domainParts.some(part => part.length > 63)) {\n    return false;\n  }\n  \n  return regex.test(value);\n};","const { is } = require(\"../helpers\");\nconst { createAlphanumericRegexObject } = require(\"./validator-helpers\");\n\n/**\n * Validate that a string conforms to the passed length requirements.\n * @param {String} value (required): The value to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {Number|Object} [rule.length] (required): The length requirements.\n * @param {Number} [rule.length.min] (optional): minimum length requirement.\n * @param {Number} [rule.length.max] (optional): maximum length requirement.\n * @returns {Boolean}\n */\nmodule.exports = function lengthValidator(value, rule) {\n  if(!(is.number(rule.length)) && !(is.object(rule.length))) {\n    return true; // If the length rule has not been defined for the value, bypass this validator\n  }\n\n  if(typeof value === \"undefined\" || value === null || value === false) {\n    return false;\n  }\n  \n  const regexStr = \"[A-Z0-9.\\\\s_-]\";\n  const regex = createAlphanumericRegexObject(regexStr, rule, \"*\");\n  \n  return regex.test(value);\n};","const { createAlphanumericRegexObject } = require(\"./validator-helpers\");\n\n/**\n * Validate that a value contains only numbers. \n * @param {Number|String} value (required): The string to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {String} [rule.type]: The expected type of the value.\n * @param {Boolean} [rule.allowWhitespace] (optional): specifies whether to allow whitespace or not.\n * @returns {Boolean}\n */\nmodule.exports = function numberValidator(value, rule) {\n  if(!rule.type || rule.type !== \"number\") {\n    return true; // If the \"number\" rule has not been specified for this value, bypass this validator.\n  }\n\n  if(value === \"\" || value === null || typeof value === \"undefined\") {\n    return false;\n  }\n  \n  const regexStr = rule.allowWhitespace ? \"[0-9\\\\s]\" : \"[0-9]\";\n  const regex = createAlphanumericRegexObject(regexStr, rule);\n  \n  return regex.test(value);\n};","const { is } = require(\"../helpers\");\n\n\n/**\n * Validate a value according to provided custom regular expression.\n * @param {Mixed} value (required): The value to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {Object|String} [rule.regex]: A regex string or a regex object.\n * @returns {Boolean}\n */\nmodule.exports = function regexValidator(value, rule) {\n  if(!rule.regex) {\n    return true; // if the regex rule has not been defined for this value, bypass this validator\n  }\n\n  const { regex: regexStr } = rule;\n  const regex = is.object(regexStr) ? regexStr : new RegExp(regexStr);\n  \n  return regex.test(value);\n};","/**\n * Validate that a value is not empty, that is, not undefined. \n * @param {String} value (required): The value to validate\n * @param {Object} rule (required): Object containing the requirements for the value to be valid.\n * @param {Boolean} [rule.required]: Dictates whether or not the value is required.\n * @param {Boolean} prevResult (optional);\n * @param {Object} extras\n * @param {Boolean} [extras.checked] (optional): if the value is of a checkbox, .\n * @returns {Boolean}\n */\nmodule.exports = function requiredFieldValidator(value, rule, _, extras) {\n  if(!rule.required) {\n    return true; // bypass this validation if no rule has been specified for it.\n  }\n\n  if(value === \"\" || typeof value === \"undefined\") {\n    return false;\n  }\n  \n  let passed;\n  \n  switch(rule.type) {\n  case \"checkbox\" : passed = extras.checked && value === \"on\"; break;\n  default         : passed = value.length > 0; break;\n  }\n  \n  return passed;\n};","module.exports = {\n  alphanumericValidator: require(\"./alphanumeric-validator\"),\n  alphaValidator: require(\"./alpha-validator\"),\n  asciiTextValidator: require(\"./ascii-text-validator\"),\n  emailValidator: require(\"./email-validator\"),\n  lengthValidator: require(\"./length-validator\"),\n  numberValidator: require(\"./number-validator\"),\n  regexValidator: require(\"./regex-validator\"),\n  requiredFieldValidator: require(\"./required-field-validator\"),\n};\n","\"use strict\";\n\nconst effects = require(\"./effects\");\nconst errorMessages = require(\"./error-messages\");\nconst { \n  APP_CLASSNAME,  \n  DISABLED_FIELD_CLASSNAME,\n  SMART_FIELD_CLASSNAME,\n  VALID_FIELD_CLASSNAME,\n  INVALID_FIELD_CLASSNAME,\n  is,\n  object,\n  generateEffectName,\n  getEffectNames,\n  getValidatorNames,\n  preEffectRegistrationCheck,\n  preValidatorRegistrationCheck,\n  isSubmitBtn,\n  normalizeId,\n  validateId,\n} = require(\"./helpers\");\nconst defaultValidators = require(\"./validators\");\n\nconst defaultEffects = Object.values(effects);\nconst defaultEffectNames = getEffectNames(effects);\nconst defaultValidatorFunctions = Object.entries(defaultValidators);\nconst defaultValidatorKeys = getValidatorNames(defaultValidators); //Object.keys(defaultValidators);\n\n\nmodule.exports = SmartField;\n\n\n/**\n * Create a new SmartField object.\n * @param {Object} element: the element to create a SmartField instance from;\n * @param {String} [element.id] (required): the id of the element \n * @param {String} [element.role] (optional): the role of the element. \n *    This can be particularly usefule for identifying submit buttons that are not defined \n *    as `<input type=\"submit\" />`. In such cases, if we want effects that work with submit buttons \n *    to have access to the button, we have to give the element a role of \"submit-button\", e.g. \n *    `<button role=\"submit-button\">Submit</button>`.\n * @param {Function} [element.getValue] (optional): A function to get the element's value.\n *    The function should return the element's value when called.\n *    If the element is an HTML element such as `input`, `select`, `checkbox`, or a contenteditable field, \n *    this property is optional, and the element's value can be retrieved automatically. \n *    For other types of elements, this value is required for getting the element's value during validation.\n * @param {Object} rule (optional): object specifying the validation rules to apply to this instance.\n * @param {Boolean} [rule.required]: specifies whether the field is required (true) or not (false)\n * @param {Number|Object} [rule.length]: specifies the accepted input length. \n *    If the value is a number, it specifies the maximum length.\n *    If the value is an object, it specifies. the minimum and/or maximum length.\n * @param {Number} [rule.length.min]: specifies the mininum accepted input length\n * @param {Number} [rule.length.max]: specifies the maximum accepted input length\n * @param {Boolean} [rule.matchCase]: performs a case-sensitive (true) or case-insensitive (false) validation.\n * @param {String} [rule.type]: the acceptable data type of the value  for this field (alnum|alpha|ascii|email|number).\n *    Default is alnum.\n * @param {String} [rule.regex]: specifies a custom validation regex.\n * \n * @returns this\n * \n * Before the field can have any validation performed on it, a rule must be added to it\n * either durinc initialization or by calling the addRule(rule) method on the instance.\n */\nfunction SmartField(element, rule) {\n  if(!is.object(element)) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"element\")\n        .replace(\":type:\", \"object\")\n    );\n  }\n\n  if(!validateId(element.id) && !isSubmitBtn(element)) {\n    throw new TypeError(\n      errorMessages\n        .objectPropertyShouldHaveType\n        .replace(\":prop:\", \"id\")\n        .replace(\":object:\", \"element\")\n        .replace(\":type:\", \"a string or a number\")\n    );\n  }\n\n  if(normalizeId(element.id).length === 0 && !isSubmitBtn(element)) {\n    throw new TypeError(\n      errorMessages\n        .objectPropertyCannotBeEmpty\n        .replace(\":prop:\", \"id\")\n        .replace(\":object:\", \"element\")\n    );\n  }\n\n  if(typeof element.getValue !== \"undefined\" && typeof element.getValue !== \"function\") {\n    throw new TypeError(\n      errorMessages\n        .objectPropertyShouldHaveType\n        .replace(\":prop:\", \"getValue\")\n        .replace(\":object:\", \"element\")\n        .replace(\":type:\", \"a function\")\n    );\n  }\n\n  if(isSubmitBtn(element)) {\n    this.role = \"submit-button\";\n  }\n\n  this.id = element.id;\n  this.element = element;\n  this.defaultEffects = new Map();\n  this.defaultValidators = new Map(defaultValidatorFunctions);\n  this.effects = new Map();\n  this.validators = new Map();\n\n  for(const effect of defaultEffects) {\n    const { name, meta, init, valid, invalid } = effect;\n\n    this.defaultEffects.set(name, { meta, init, valid, invalid });\n\n    if(is.function(init)) {\n      init(this.element);\n    }\n  }\n\n  if(is.object(rule)) {\n    this.addRule({ ...rule, fieldId: element.id });\n  }\n\n  claimField(element);\n}\n\n/**\n * Add a new rule to a SmartField instance or update the existing rule for the instance.\n * @param {Object} rule: Object containing the requirements for the field's value to be valid.\n * @param {Boolean} [rule.required]: (for checkbox, dropdown, and text fields): determines if the field is required.\n * @param {Number|Object} [rule.length]: specify the accepted input length. \n *    If the value is a number, it specifies the maximum length.\n *    If the value is an object, it specifies the minimum and/or maximum length.\n * @param {Number} [rule.length.min]: specifies the mininum accepted input length\n * @param {Number} [rule.length.max]: specifies the maximum accepted input length\n * @param {Boolean} [rule.allowWhitespace]: specifies if white-space characters are allowed.\n * @param {Boolean} [rule.matchCase]: performs a case-sensitive (true) or case-insensitive(false) validation.\n * @param {String} [rule.type]: the input field's expected data type (alnum|alpha|ascii|email|number|text).\n *    Default is alnum.\n * @param {String} [rule.regex]: specifies a custom validation regex\n * @param {Boolean} replace (optional): replace the existing rule completely with the new rule.\n *    This will not only overwrite a specific key, but replace the entire previous `rule` object.\n * \n * @returns this\n * \n */\nSmartField.prototype.addRule = function addRule(rule) {\n  const existingRule = this.rule;\n  \n  if(is.object(existingRule) && is.object(rule)) {\n    this.rule = object.cloneAndExtend(existingRule, rule);\n  } else {\n    this.rule = rule;\n  }\n  \n  return this;\n};\n\n/**\n * Delete the rule for this instance.\n * @param {String} key (optional): If specified, delete only the specified rule.\n * Otherwise, delete the entire rule object for this instance.\n * \n * @returns this\n */\nSmartField.prototype.removeRule = function removeRule(key) {\n  const existingRule = this.rule;\n\n  if(!is.object(existingRule)) {\n    return this;\n  }\n  \n  if(key) {\n    delete this.rule[key];\n  } else {\n    delete this.rule;\n  }\n\n  return this;\n};\n\n/**\n * Get the rule object associated with this field\n * @param {String} key (optional): get specific rule by key.\n * @return {Boolean|Object|String|Undefined}\n */\nSmartField.prototype.getRule = function getRule(key) {\n  if(key && this.rule) {\n    return typeof this.rule[key] !== \"undefined\" ? this.rule[key] : null;\n  } else {\n    return this.rule || null;\n  }\n};\n\n/**\n * getEffect:  retrieves an effect attached to this field by name.\n * \n * @param {String} name (required)\n * @param {String} namespace (optional)\n * @returns {Boolean}\n */\nSmartField.prototype.getEffect = function getEffect(name, namespace) {\n  name = is.string(name) ? name.trim().toLowerCase() : \"\";\n  namespace = is.string(namespace) ? namespace.trim().toLowerCase() : \"\";\n\n  const effectName = generateEffectName(name, namespace);\n\n  if(this.effects.has(effectName)) {\n    return this.effects.get(effectName);\n  } else {\n    return null;\n  }\n};\n\n/**\n * @param {String} type (optional): \"addon\"|\"default\".\n * @returns {Object} with members: `default` and/or `addon`.\n */\nSmartField.prototype.getEffects = function getActiveEffects(type) {\n  type = is.string(type) ? type.toLowerCase().trim() : \"\";\n\n  const effects = {\n    default: this.defaultEffects,\n    addon: this.effects,\n  };\n\n  if([\"addon\", \"default\"].includes(type)) {\n    return effects[type];\n  } else {\n    return effects;\n  }\n};\n\n/**\n * \n * @param {Object} effect: \n * @param {String} [effect.name] (required): The name of this effect, used when registering the effect.\n * @param {Function} [effects.init] (optional): Function that performs any initialization function.\n *    The function is invoked right after the effect is registered.\n *    It receives the current input field as its first argument.\n * @param {Function} [effect.valid] (required): Function to invoke post-validation if the field is valid.\n *    The function receives the validated input field as its first argument.\n * @param {Function} [effect.invalid] (required): Function to invoke post-validation if the field is invalid.\n *    The function is passed the validated input field as its first argument\n * @param {Object} [effect.meta] (optional): Effect meta data, e.g., namespace, author, version, etc.\n * @param {String} [effect.meta.namespace]: used in conjunction with the effect `name` \n *    to create a unique name for the effect.\n * @returns this.\n */\nSmartField.prototype.useEffect = function useEffect(effect) {\n  const parsedEffect = preEffectRegistrationCheck(effect, defaultEffectNames);\n\n  let { name: effectName, meta, init, valid, invalid } = parsedEffect;\n\n  if(this.usesEffect(effectName)) {\n    throw new TypeError(\n      errorMessages.objectWithKeyExists\n        .replace(\":object:\", \"An effect\")\n        .replace(\":key:\", effectName)\n    );\n  }\n\n  this.effects.set(effectName, { meta, init, valid, invalid });\n\n  if(is.function(init)) {\n    init(this.getElement());\n  }\n\n  return this;\n};\n\n/**\n * usesEffect: checks whether the field has any effects attached to.\n * If the `name` (and/or `namespace`) parameter is supplied, \n * checks if the field has the named effect attached.\n * \n * @param {String} name (optional)\n * @param {String} namespace (optional)\n * @returns {Boolean}\n */\nSmartField.prototype.usesEffect = function usesEffect(name, namespace) {\n  if(is.string(name)) {\n    name = name.trim().toLowerCase();\n    namespace = is.string(namespace) ? namespace.trim().toLowerCase() : \"\";\n\n    const effectName = generateEffectName(name, namespace);\n\n    return this.effects.has(effectName);\n  } else {\n    return this.effects.size > 0;\n  }\n};\n\n/**\n * Add a validator to the list of validators for this field.\n * \n * @param {String} validatorKey (required): The identifier for the validator.\n * @param {Function} validatorFn (required): A function that validates the field.\n *    The function is passed the following arguments in order: \n *       - `value`: the value entered by the user for this field\n *       - `rule`: the rule defined for this field instance\n *       - `prevResult`: a Boolean value indicating the result of previous validators.\n *       - `extras`: object containing any other field-specific information, \n *             like the \"checked\" state for checkboxes, etc.\n *    The function should return Boolean true or false to indicate if the validation passed.\n * @param {Object} validatorMeta (optional): Object containing validator metadata (namespace, author, etc.)\n * @param {String} [validatorMeta.namespace]: namespace of the validator. \n *    This is appended to the key to prevent naming conflicts.\n * @returns this.\n */\nSmartField.prototype.addValidator = function addValidator(validatorKey, validatorFn, validatorMeta) {\n  validatorKey = preValidatorRegistrationCheck(validatorKey, validatorFn, validatorMeta, defaultValidatorKeys);\n\n  if(this.hasValidator(validatorKey)) {\n    throw new TypeError(\n      errorMessages.objectWithKeyExists\n        .replace(\":object:\", \"A validator\")\n        .replace(\":key:\", validatorKey)\n    );\n  }\n\n  this.validators.set(validatorKey, validatorFn);\n\n  return this;\n};\n\n/**\n * @param {String} type (optional): \"addon\"|\"default\".\n * @returns {Object} with members: `default` and/or `addon`.\n */\nSmartField.prototype.getValidators = function getValidators(type) {\n  type = is.string(type) ? type.toLowerCase().trim() : \"\";\n\n  const validators = {\n    default: this.defaultValidators,\n    addon: this.validators,\n  };\n\n  if([\"addon\", \"default\"].includes(type)) {\n    return validators[type];\n  } else {\n    return validators;\n  }\n};\n\nSmartField.prototype.hasValidator = function hasValidator(validatorKey) {\n  if(is.string(validatorKey)) {\n    validatorKey = validatorKey.trim().toLowerCase();\n  }\n\n  return (\n    is.string(validatorKey)\n      ? this.validators.has(validatorKey) \n      : this.validators.size > 0\n  );\n};\n\n/**\n * Get the original input field passed to the constructor\n * @returns \n */\nSmartField.prototype.getElement = function getElement() { \n  return this.element;\n};\n\n/**\n * Get the value entered by the user for this field\n * @returns {String|Mixed}\n */\nSmartField.prototype.getValue = function getValue() {\n  let value;\n  let input = this.getElement();\n\n  if(typeof input.getValue === \"function\") {\n    value = input.getValue();\n  } else if(input.type?.toLowerCase() === \"checkbox\") {\n    value = input.value;\n  } else if(input.tagName?.toLowerCase() === \"select\") {\n    value = getHtmlSelectElementSelectedOption(input)?.value?.trim();\n  } else if(typeof input.value !== \"undefined\") {\n    value = input.value;\n  } else if(input.isContentEditable && typeof input.textContent !== \"undefined\") {\n    value = input.textContent;\n  }\n\n  return ( is.string(value) ? value.trim() : value );\n};\n\n/**\n * @returns {Boolean}\n */\nSmartField.prototype.validate = function validate() {\n  const { default: defaultValidators, addon: addonValidators } = this.getValidators();\n  const validators = Array.from(defaultValidators.values()).concat(Array.from(addonValidators.values()));\n\n  if(validators.length === 0) {\n    throw new TypeError(errorMessages.noValidatorsActive);\n  }\n\n  const { default: defaultEffects, addon: addonEffects } = this.getEffects();\n  const effects = Array.from(defaultEffects.values()).concat(Array.from(addonEffects.values()));\n\n  if(effects.length === 0) {\n    throw new TypeError(errorMessages.noEffectsActive);\n  }\n\n  let rule = this.getRule();\n  const input = this.getElement();\n  const value = this.getValue();\n  const extras = {};\n\n  if(rule.required && input.type === \"checkbox\") {\n    extras.checked = input.checked;\n  }\n\n  const validationPassed = validators.reduce((passed, fn) => passed && fn(value, rule, passed, extras), true);\n\n  effects.forEach(function invokeValidationResultEffect({ valid, invalid }) {\n    if(validationPassed) {\n      valid(input);\n    } else {\n      invalid(input);\n    }\n  });\n\n  return validationPassed;\n};\n\n/**\n * Start Listening for \"input\" events and perform validation\n * @param {Function} callback: A function to invoke on validation complete.\n *   The function will be passed the input field and the result (Boolean) of the validation.\n */\nSmartField.prototype.watch = function watch(callback) {\n  const input = this.getElement();\n  let targetEvent;\n  \n  switch(input.type) {\n  case \"checkbox\" : targetEvent = \"click\"; break;\n  case \"email\"    :\n  case \"password\" : \n  case \"text\"     : \n  default         : targetEvent = \"input\"; break;\n  }\n  \n  input.addEventListener(targetEvent, () => this.validate(_, callback)); // eslint-disable-line\r\n};\n\nSmartField.prototype.reset = function reset() {\n  const element = this.getElement();\n  const { default: defaultEffects, addon: addonEffects } = this.getEffects();\n  const effects = Array.from(defaultEffects.values()).concat(Array.from(addonEffects.values()));\n\n  element.classList.remove(APP_CLASSNAME);\n  element.classList.remove(DISABLED_FIELD_CLASSNAME);\n  element.classList.remove(SMART_FIELD_CLASSNAME);\n  element.classList.remove(VALID_FIELD_CLASSNAME);\n  element.classList.remove(INVALID_FIELD_CLASSNAME);\n\n  claimField(element);\n\n  if(effects.length > 0) {\n    effects.forEach(function reInitEffect(effect) {\n      if(is.function(effect.init)) {\n        effect.init(element);\n      }\n    });\n  }\n};\n\n\n// Helpers\n\nfunction getHtmlSelectElementSelectedOption(selectElement) {\n  return {\n    value : selectElement.value,\n    text  : selectElement.options[selectElement.selectedIndex].text,\n  };\n}\n\nfunction claimField(input) {\n  input.classList?.add(APP_CLASSNAME);\n  input.classList?.add(SMART_FIELD_CLASSNAME);\n}","const errorMessages = require(\"../error-messages\");\nconst { is, isSubmitBtn, normalizeId, validateId } = require(\"../helpers\");\nconst SmartField = require(\"../smart-field\");\n\n/**\n * Add a new field for validation\n * @param {Object|String} input: the field to validate. The field must have an `id` property.\n *    This can be the HTML element itself if we already have it, or its ID.\n * @param {String} [input.id] (required): the id of the element \n * @param {String} [input.role] (optional): the role of the element. \n *    This can be particularly useful for identifying submit buttons that are not defined \n *    as `<input type=\"submit\" />`. In such cases, if we want effects that work with submit buttons \n *    to have access to the button, we have to give the element a role of \"submit-button\", e.g. \n *    `<button role=\"submit-button\">Submit</button>`.\n * @param {Object} rule (optional): object containing validation rules for this field.\n * @param {Boolean} [rule.required]: specifies whether the field is required (true) or not (false)\n * @param {Number|Object} [rule.length]: specifies the accepted input length. \n *   If the value is a number, it specifies the maximum length. \n *   If the value is an object, it specifies the minimum and/or maximum length.\n * @param {Number} [rule.length.min]: specifies the mininum accepted input length\n * @param {Number} [rule.length.max]: specifies the maximum accepted input length\n * @param {Boolean} [rule.matchCase]: performs case-sensitive (true) or case-insensitive (false) validation.\n * @param {String} [rule.type]: the field's expected data type (alnum|alpha|email|number|text).\n *    Default is alnum.\n * @param {String} [rule.regex]: specifies a custom validation regex\n * @returns this\n */\nmodule.exports = function addField(input, rule) {\n  if(typeof input === \"string\") {\n    input = document.getElementById(input);\n  }\n\n  if(!is.object(input)) {\n    throw new TypeError(\n      errorMessages.functionParamExpectsType\n        .replace(\":param:\", \"input\")\n        .replace(\":type:\", \"object\")\n    );\n  }\n  \n  if(!validateId(input.id) && !isSubmitBtn(input)) {\n    throw new TypeError(\n      errorMessages.objectPropertyShouldHaveType\n        .replace(\":prop:\", \"id\")\n        .replace(\":object:\", \"input\")\n        .replace(\":type:\", \"a string or a number\")\n    );\n  }\n  \n  const field = this.getField(normalizeId(input.id));\n  \n  if(field) {\n    if(is.object(rule)) {\n      rule.field = input.id;\n  \n      this.addRule(rule);\n    }\n  } else {\n    this.fields.push(new SmartField(input, rule));\n  }\n    \n  return this;\n};","\"use strict\";\n\nconst errorMessages = require(\"./error-messages\");\nconst { is, isSubmitBtn, validateId } = require(\"./helpers\");\nconst { addInstanceMethod, addStaticMethod } = require(\"./methods\");\n\nconst staticMethods = [\"getEffects\", \"useEffect\"];\nconst instanceMethods = [\n  \"addRule\", \"removeRule\", \"getField\", \"getFields\", \n  \"getEffects\", \"reset\", \"useEffect\", \"toJSON\", \"validate\", \"watch\"\n];\n\n\nmodule.exports = SmartForm;\n\n\n/**\n * Create a new SmartForm object.\n * @param {Object|String} the form element to add validation routine to.\n *    This can be the HTML form object if we already have it, or its ID.\n * @param {Array} rules (optional): array of objects specifying the validation rules for the form's elements.\n * @param {String} [rules[i].fieldId]: the id of the input field to apply these rules to\n * @param {Boolean} [rules[i].required]: specifies whether the field is required (true) or not (false)\n * @param {Number|Object} [rules[i].length]: specifies the accepted input length. \n *    If the value is a number, it specifies the maximum length.\n *    If the value is an object, it specifies. the minimum and/or maximum length.\n * @param {Number} [rules[i].length.min]: specifies the mininum accepted input length\n * @param {Number} [rules[i].length.max]: specifies the maximum accepted input length\n * @param {Boolean} [rules[i].matchCase]: performs a case-sensitive (true) or case-insensitive (false) validation.\n * @param {String} [rules[i].type]: the input field's expected data type (alnum|alpha|email|number|text).\n *    Default is alnum.\n * @param {String} [rules[i].regex]: specifies a custom validation regex.\n * \n * @returns this.\n * \n * Before any of the form's fields can have any validation performed on them, \n * a rule must be added to it\n * either during initialization or by calling the addRule(rule) method on the SmartForm instance.\n */\nfunction SmartForm(form, rules) {\n  if(typeof form === \"string\") {\n    form = document.getElementById(form.trim());\n  }\n\n  if(!is.object(form)) {\n    throw new TypeError(\n      errorMessages.htmlElementExpected\n        .replace(\":param:\", \"form\")\n        .replace(\":elementType:\", \"form\")\n    );\n  }\n\n  this.form = form;\n  this.fields = [];\n  const elements = form.elements;\n\n  if(elements) {\n    Array.from(elements).forEach(input => {\n      if(validateId(input.id) || isSubmitBtn(input)) {\n        this.addField(input);\n      }\n    });\n  }\n  \n  if(is.array(rules)) {\n    // Grab a hold of only the input fields passed to our smart-form-validator processor; \n    // Ignore other fields and let the user handle those themselves.\n    rules.forEach(rule => {\n      const input = form.querySelector(`#${rule.fieldId}`);\n\n      if(input && this.getField(input.id)) {\n        this.addRule(rule);\n      }\n    });\n  }\n}\n\nSmartForm.prototype.addField = function addField(element, rule) {\n  const formInputIds = Array.from(this.form.elements).map(el => el.id);\n\n  if(formInputIds.includes(element.id)) {\n    require(\"./methods/addField\").call(this, element, rule);\n  }\n\n  return this;\n};\n\nstaticMethods.forEach(function bindMethodToClass(method) {\n  addStaticMethod(SmartForm, method);\n});\n\ninstanceMethods.forEach(function bindMethodToInstance(method) {\n  addInstanceMethod(SmartForm, method);\n});\n","\"use strict\";\n\nconst { addInstanceMethod, addStaticMethod } = require(\"./methods\");\nconst SmartForm = require(\"./smart-form\");\n\nconst staticMethods = [\"getEffects\", \"useEffect\"];\nconst instanceMethods = [\n  \"addField\", \"addFields\", \"addRule\", \"removeRule\", \"addValidator\", \"getValidators\", \n  \"getField\", \"getFields\", \"getEffects\", \"reset\", \"useEffect\", \"toJSON\", \"validate\", \"watch\"\n];\n\n\nmodule.exports = SmartFormValidator;\n\n\nfunction SmartFormValidator() { \n  this.fields = [];\n  this.form = null;\n}\n\n/**\n * Create a new SmartForm object.\n * @param {Object|String} the HTML form element to add validation routine to.\n *    This can be the HTML form object if we already have it, or its ID.\n * @param {Array} rules (optional): array of objects specifying the validation rules for the form's elements.\n * @param {String} [rules[i].fieldId]: the id of the input field to apply these rules to\n * @param {Boolean} [rules[i].required]: specifies whether the field is required (true) or not (false)\n * @param {Number|Object} [rules[i].length]: specifies the accepted input length. \n *    If the value is a number, it specifies the maximum length.\n *    If the value is an object, it specifies. the minimum and/or maximum length.\n * @param {Number} [rules[i].length.min]: specifies the mininum accepted input length\n * @param {Number} [rules[i].length.max]: specifies the maximum accepted input length\n * @param {Boolean} [rules[i].matchCase]: performs a case-sensitive (true) or case-insensitive (false) validation.\n * @param {String} [rules[i].type]: the input field's expected data type (alnum|alpha|email|number|text).\n *    Default is alnum.\n * @param {String} [rules[i].regex]: specifies a custom validation regex.\n * \n * @returns {Object} SmartForm instance.\n * \n * Before any of the form's fields can have any validation performed on them, \n * a rule must be added to it\n * either here or by calling the addRule(rule) method on the returned SmartForm instance.\n */\nSmartFormValidator.prototype.addForm = function addForm(form, rules) {\n  const smartForm = new SmartForm(form, rules);\n\n  this.form = smartForm.form;\n\n  return smartForm;\n};\n\nstaticMethods.forEach(function bindMethodToClass(method) {\n  addStaticMethod(SmartFormValidator, method);\n});\n\ninstanceMethods.forEach(function bindMethodToInstance(method) {\n  addInstanceMethod(SmartFormValidator, method);\n});\n","\"use strict\";\n\nconst SmartFormValidator = require(\"./smart-form-validator\");\n\nmodule.exports = SmartFormValidator;\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireSrc } from \"D:\\\\dev\\\\public-repos\\\\nodejs-apps\\\\smart-form-validator\\\\src\\\\index.js\";\nvar srcExports = requireSrc();\nexport { srcExports as __moduleExports };export default /*@__PURE__*/getDefaultExportFromCjs(srcExports);"],"names":["errorMessages","argNamesAreReserved","fieldCannotBeEmpty","fieldNotRegistered","functionParamExpectsType","functionParamIsRequired","htmlElementExpected","noObjectWithSpecifiedKey","noEffectsActive","noValidatorsActive","objectPropertyCannotBeEmpty","objectMustHaveProperty","objectsMustHaveProperty","objectPropertyShouldHaveType","objectWithKeyExists","objectWithKeyExistsCanReplace","unknownType","require$$0","APP_CLASSNAME","SMART_FIELD_CLASSNAME","DISABLED_FIELD_CLASSNAME","VALID_FIELD_CLASSNAME","INVALID_FIELD_CLASSNAME","is","array","isArray","isFunction","number","isNumber","object","isObject","string","isString","clone","cloneAndExtend","has","objectHas","helpers","createListFromArray","generateEffectName","getEffectNames","getValidatorNames","isSubmitBtn","normalizeId","preEffectRegistrationCheck","preValidatorRegistrationCheck","validateId","data","Array","num","Number","isNaN","_typeof","obj","prop","Object","prototype","hasOwnProperty","call","assign","newProps","combinator","concat","join","name","namespace","trim","length","effects","effectObjects","values","effectNames","map","effect","validators","keys","element","type","role","id","String","defaultEffectNames","TypeError","replace","meta","valid","invalid","effectName","includes","_objectSpread","validatorKey","validatorFn","validatorMeta","defaultValidatorKeys","validatorNamespace","generateValidatorKey","Boolean","key","_require$$","require$$1","instanceMethodNames","staticMethodNames","methods","addInstanceMethod","addStaticMethod","ctor","methodName","require","effectsHelpers","isSubmitButton","_require$$2","addBottomBorder","handleValid","handleInvalid","field","classList","remove","add","addValidationStatusIcons","toggleSubmitButton","init","canSubmitForm","validationPassed","input","submitBtn","removeAttribute","setAttribute","e","console","log","message","require$$2","regexRules","validatorHelpers","createAlphanumericRegexObject","getLengthRegex","getRegexRules","regexStr","rule","emptyLengthCharacter","lenRegex","RegExp","matchCase","lengthRule","len","min","max","tmp","alphanumericValidator","value","allowWhitespace","regex","test","alphaValidator","asciiTextValidator","emailValidator","emailParts","split","_emailParts","_slicedToArray","account","address","domainParts","some","part","lengthValidator","numberValidator","regexValidator","requiredFieldValidator","_","extras","required","passed","checked","require$$3","require$$4","require$$5","require$$6","require$$7","defaultValidators","defaultEffects","defaultValidatorFunctions","entries","smartField","SmartField","getValue","Map","_iterator","_createForOfIteratorHelper","_step","s","n","done","set","err","f","addRule","fieldId","claimField","existingRule","removeRule","getRule","getEffect","toLowerCase","get","getEffects","getActiveEffects","addon","useEffect","parsedEffect","usesEffect","getElement","size","addValidator","hasValidator","getValidators","_input$type","_input$tagName","tagName","_getHtmlSelectElement","getHtmlSelectElementSelectedOption","isContentEditable","textContent","validate","_this$getValidators","addonValidators","from","_this$getEffects","addonEffects","reduce","fn","forEach","invokeValidationResultEffect","_ref","watch","callback","_this","targetEvent","addEventListener","reset","_this$getEffects2","reInitEffect","selectElement","text","options","selectedIndex","_input$classList","_input$classList2","addField","document","getElementById","getField","fields","push","staticMethods","instanceMethods","smartForm","SmartForm","form","rules","elements","querySelector","formInputIds","el","bindMethodToClass","method","bindMethodToInstance","smartFormValidator","SmartFormValidator","addForm","src","srcExports","requireSrc","getDefaultExportFromCjs"],"mappings":";;;;;;;;;;;;;;;AAAAA,EAAAA,aAAc,GAAG;AACfC,IAAAA,mBAAmB,EAAE,uFAAuF;AAC5GC,IAAAA,kBAAkB,EAAE,gDAAgD;AACpEC,IAAAA,kBAAkB,EAAE,iFAAiF;AACrGC,IAAAA,wBAAwB,EAAE,uCAAuC;AACjEC,IAAAA,uBAAuB,EAAE,oCAAoC;AAC7DC,IAAAA,mBAAmB,EAAE,gEAAgE;AACrFC,IAAAA,wBAAwB,EAAE,yCAAyC;IACnEC,eAAe,EAAE,mDAAmD,GAClE,sDAAsD;IACxDC,kBAAkB,EAAE,iDAAiD,GACnE,qDAAqD,GACrD,2EAA2E,GAC3E,mDAAmD,GACnD,0EAA0E;AAC5EC,IAAAA,2BAA2B,EAAE,gEAAgE;AAC7FC,IAAAA,sBAAsB,EAAE,sDAAsD;AAC9EC,IAAAA,uBAAuB,EAAE,kHAAkH;AAC3IC,IAAAA,4BAA4B,EAAE,kEAAkE;AAChGC,IAAAA,mBAAmB,EAAE,0CAA0C;AAC/DC,IAAAA,6BAA6B,EAAE,2EAA2E;AAC1GC,IAAAA,WAAW,EAAE,mEAAA;GACd,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBD,EAAA,IAAMhB,aAAa,GAAGiB,oBAAA,EAA2B,CAAA;EAEjD,IAAMC,aAAa,GAAG,KAAK,CAAA;EAC3B,IAAMC,qBAAqB,GAAG,QAAQ,CAAA;EACtC,IAAMC,wBAAwB,GAAG,cAAc,CAAA;EAC/C,IAAMC,qBAAqB,GAAG,QAAQ,CAAA;EACtC,IAAMC,uBAAuB,GAAG,WAAW,CAAA;AAE3C,EAAA,IAAMC,EAAE,GAAG;AACTC,IAAAA,KAAK,EAAEC,OAAO;AACd,IAAA,UAAA,EAAUC,UAAU;AACpBC,IAAAA,MAAM,EAAEC,QAAQ;AAChBC,IAAAA,MAAM,EAAEC,QAAQ;AAChBC,IAAAA,MAAM,EAAEC,QAAAA;GACT,CAAA;AAED,EAAA,IAAMH,MAAM,GAAG;AACbI,IAAAA,KAAK,EAALA,KAAK;AACLC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,GAAG,EAAEC,SAAAA;GACN,CAAA;;AAED;AACAC,EAAAA,OAAc,GAAG;AACfd,IAAAA,EAAE,EAAFA,EAAE;AACFM,IAAAA,MAAM,EAANA,MAAM;AACNS,IAAAA,mBAAmB,EAAnBA,mBAAmB;AACnBC,IAAAA,kBAAkB,EAAlBA,kBAAkB;AAClBC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjBC,IAAAA,WAAW,EAAXA,WAAW;AACXC,IAAAA,WAAW,EAAXA,WAAW;AACXC,IAAAA,0BAA0B,EAA1BA,0BAA0B;AAC1BC,IAAAA,6BAA6B,EAA7BA,6BAA6B;AAC7BC,IAAAA,UAAU,EAAVA,UAAU;AACV5B,IAAAA,aAAa,EAAbA,aAAa;AACbE,IAAAA,wBAAwB,EAAxBA,wBAAwB;AACxBD,IAAAA,qBAAqB,EAArBA,qBAAqB;AACrBE,IAAAA,qBAAqB,EAArBA,qBAAqB;AACrBC,IAAAA,uBAAuB,EAAvBA,uBAAAA;GACD,CAAA;EAED,SAASG,OAAOA,CAACsB,IAAI,EAAE;AACrB,IAAA,OAAOC,KAAK,CAACvB,OAAO,CAACsB,IAAI,CAAC,CAAA;AAC5B,GAAA;EAEA,SAASrB,UAAUA,CAACqB,IAAI,EAAE;IACxB,OAAO,OAAOA,IAAI,KAAK,UAAU,CAAA;AACnC,GAAA;EAEA,SAASnB,QAAQA,CAACqB,GAAG,EAAE;AACrBA,IAAAA,GAAG,GAAGC,MAAM,CAACD,GAAG,CAAC,CAAA;IAEjB,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,GAAG,CAAC,CAAA;AACtD,GAAA;EAEA,SAASnB,QAAQA,CAACiB,IAAI,EAAE;AACtB,IAAA,OAAQK,OAAA,CAAOL,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,CAACtB,OAAO,CAACsB,IAAI,CAAC,CAAA;AAC5D,GAAA;EAEA,SAASf,QAAQA,CAACe,IAAI,EAAE;IACtB,OAAO,OAAOA,IAAI,KAAK,QAAQ,CAAA;AACjC,GAAA;AAEA,EAAA,SAASX,SAASA,CAACiB,GAAG,EAAEC,IAAI,EAAE;IAC5B,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,GAAG,EAAEC,IAAI,CAAC,CAAA;AACxD,GAAA;EAEA,SAASrB,KAAKA,CAACoB,GAAG,EAAE;AAClB,IAAA,OAAOvB,QAAQ,CAACuB,GAAG,CAAC,GAAGE,MAAM,CAACI,MAAM,CAAC,EAAE,EAAEN,GAAG,CAAC,GAAGA,GAAG,CAAA;AACrD,GAAA;AAEA,EAAA,SAASnB,cAAcA,CAACmB,GAAG,EAAEO,QAAQ,EAAE;IACrC,IAAG9B,QAAQ,CAACuB,GAAG,CAAC,IAAIvB,QAAQ,CAAC8B,QAAQ,CAAC,EAAE;MACtC,OAAOL,MAAM,CAACI,MAAM,CAAC1B,KAAK,CAACoB,GAAG,CAAC,EAAEO,QAAQ,CAAC,CAAA;AAC9C,KAAG,MAAM;AACL,MAAA,OAAOP,GAAG,CAAA;AACX,KAAA;AACH,GAAA;AAEA,EAAA,SAASf,mBAAmBA,CAACd,KAAK,EAAEqC,UAAU,EAAE;AAC9C,IAAA,IAAG,OAAOA,UAAU,KAAK,QAAQ,EAAE;AACjCA,MAAAA,UAAU,GAAG,QAAQ,CAAA;AACtB,KAAA;IAED,OAAAC,EAAAA,CAAAA,MAAA,CAAUD,UAAU,CAAAC,CAAAA,MAAA,CAAGtC,KAAK,CAACuC,IAAI,CAACF,UAAU,CAAC,CAAA,CAAA;AAC/C,GAAA;AAEA,EAAA,SAAStB,kBAAkBA,CAACyB,IAAI,EAAEC,SAAS,EAAE;AAC3CD,IAAAA,IAAI,GAAGzC,EAAE,CAACQ,MAAM,CAACiC,IAAI,CAAC,GAAGA,IAAI,CAACE,IAAI,EAAE,GAAG,EAAE,CAAA;AACzCD,IAAAA,SAAS,GAAG1C,EAAE,CAACQ,MAAM,CAACkC,SAAS,CAAC,GAAGA,SAAS,CAACC,IAAI,EAAE,GAAG,EAAE,CAAA;IAExD,IAAGF,IAAI,CAACG,MAAM,GAAG,CAAC,IAAIF,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;AAC1C,MAAA,OAAA,EAAA,CAAAL,MAAA,CAAUG,SAAS,EAAAH,GAAAA,CAAAA,CAAAA,MAAA,CAAIE,IAAI,CAAA,CAAA;AAC/B,KAAG,MAAM,IAAGA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;AACzB,MAAA,OAAOH,IAAI,CAAA;AACf,KAAG,MAAM;AACL,MAAA,OAAO,EAAE,CAAA;AACV,KAAA;AACH,GAAA;EAEA,SAASxB,cAAcA,CAAC4B,OAAO,EAAE;AAC/B,IAAA,IAAMC,aAAa,GAAGd,MAAM,CAACe,MAAM,CAACF,OAAO,CAAC,CAAA;AAC5C,IAAA,IAAMG,WAAW,GAAGF,aAAa,CAACG,GAAG,CAAC,UAAAC,MAAM,EAAA;MAAA,OAAIA,MAAM,CAACT,IAAI,CAAA;KAAC,CAAA,CAAA;AAE5D,IAAA,OAAOO,WAAW,CAAA;AACpB,GAAA;EAEA,SAAS9B,iBAAiBA,CAACiC,UAAU,EAAE;AACrC,IAAA,OAAOnB,MAAM,CAACoB,IAAI,CAACD,UAAU,CAAC,CAAA;AAChC,GAAA;EAEA,SAAShC,WAAWA,CAACkC,OAAO,EAAE;IAC5B,OAAOA,OAAO,CAACC,IAAI,KAAK,QAAQ,IAAID,OAAO,CAACE,IAAI,KAAK,eAAe,CAAA;AACtE,GAAA;EAEA,SAASnC,WAAWA,CAACoC,EAAE,EAAE;AACvB,IAAA,OAAOC,MAAM,CAACD,EAAE,CAAC,CAACb,IAAI,EAAE,CAAA;AAC1B,GAAA;AAEA,EAAA,SAAStB,0BAA0BA,CAAC6B,MAAM,EAAEQ,kBAAkB,EAAE;AAC9D,IAAA,IAAG,CAAE1D,EAAE,CAACM,MAAM,CAAC4C,MAAM,CAAE,EAAE;MACvB,MAAM,IAAIS,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAC5BA,OAAO,CAAC,QAAQ,EAAE,WAAW,CACtC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAMnB,IAAI,GAA2BS,MAAM,CAArCT,IAAI;MAAEoB,IAAI,GAAqBX,MAAM,CAA/BW,IAAI;MAAEC,KAAK,GAAcZ,MAAM,CAAzBY,KAAK;MAAEC,OAAO,GAAKb,MAAM,CAAlBa,OAAO,CAAA;AAEhC,IAAA,IAAG,CAAE/D,EAAE,CAACQ,MAAM,CAACiC,IAAI,CAAE,EAAE;MACrB,MAAM,IAAIkB,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,CACjCA,OAAO,CAAC,QAAQ,EAAE,UAAU,CACrC,CAAK,CAAA;AACF,KAAA;IAED,IAAIlB,SAAS,GAAG,EAAE,CAAA;AAClBD,IAAAA,IAAI,GAAGA,IAAI,CAACE,IAAI,EAAE,CAAA;AAElB,IAAA,IAAG,CAAE3C,EAAE,CAAA,UAAA,CAAS,CAAC8D,KAAK,CAAE,EAAE;MACxB,MAAM,IAAIH,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAClCA,OAAO,CAAC,QAAQ,EAAE,YAAY,CACvC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAAE5D,EAAE,CAAA,UAAA,CAAS,CAAC+D,OAAO,CAAE,EAAE;MAC1B,MAAM,IAAIJ,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,CACpCA,OAAO,CAAC,QAAQ,EAAE,YAAY,CACvC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG5D,EAAE,CAACM,MAAM,CAACuD,IAAI,CAAC,IAAI7D,EAAE,CAACQ,MAAM,CAACqD,IAAI,CAACnB,SAAS,CAAC,EAAE;AAC/CA,MAAAA,SAAS,GAAGmB,IAAI,CAACnB,SAAS,CAACC,IAAI,EAAE,CAAA;AAClC,KAAA;AAED,IAAA,IAAMqB,UAAU,GAAGhD,kBAAkB,CAACyB,IAAI,EAAEC,SAAS,CAAC,CAAA;AAEtD,IAAA,IAAGsB,UAAU,CAACpB,MAAM,KAAK,CAAC,EAAE;MAC1B,MAAM,IAAIe,SAAS,CACjBlF,aAAa,CAACE,kBAAkB,CAC7BiF,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,CACjCA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CACnC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAGF,kBAAkB,CAACO,QAAQ,CAACD,UAAU,CAAC,EAAE;AAC1C,MAAA,MAAM,IAAIL,SAAS,CACjBlF,aAAa,CAACC,mBAAmB,CAC9BkF,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,CAC9BA,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CACrCA,OAAO,CAAC,aAAa,EAAE7C,mBAAmB,CAAC2C,kBAAkB,CAAC,CACvE,CAAK,CAAA;AACF,KAAA;AAED,IAAA,OAAAQ,cAAA,CAAAA,cAAA,CAAA,EAAA,EAAYhB,MAAM,CAAA,EAAA,EAAA,EAAA;AAAET,MAAAA,IAAI,EAAEuB,UAAAA;AAAU,KAAA,CAAA,CAAA;AACtC,GAAA;EAEA,SAAS1C,6BAA6BA,CAAC6C,YAAY,EAAEC,WAAW,EAAEC,aAAa,EAAEC,oBAAoB,EAAE;AACrG,IAAA,IAAG,CAAEtE,EAAE,CAACQ,MAAM,CAAC2D,YAAY,CAAE,EAAE;MAC7B,MAAM,IAAIR,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAClCA,OAAO,CAAC,QAAQ,EAAE,UAAU,CACrC,CAAK,CAAA;AACF,KAAA;IAED,IAAIW,kBAAkB,GAAG,EAAE,CAAA;AAE3BJ,IAAAA,YAAY,GAAGA,YAAY,CAACxB,IAAI,EAAE,CAAA;IAElC,IAAG,CAACwB,YAAY,EAAE;MAChB,MAAM,IAAIR,SAAS,CACjBlF,aAAa,CAACE,kBAAkB,CAC7BiF,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAClCA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAA;AAClC,KAAA;AAED,IAAA,IAAG5D,EAAE,CAACM,MAAM,CAAC+D,aAAa,CAAC,IAAIrE,EAAE,CAACQ,MAAM,CAAC6D,aAAa,CAAC3B,SAAS,CAAC,EAAE;AACjE6B,MAAAA,kBAAkB,GAAGF,aAAa,CAAC3B,SAAS,CAACC,IAAI,EAAE,CAAA;AACpD,KAAA;AAEDwB,IAAAA,YAAY,GAAGK,oBAAoB,CAACL,YAAY,EAAEI,kBAAkB,CAAC,CAAA;AAErE,IAAA,IAAGD,oBAAoB,CAACL,QAAQ,CAACE,YAAY,CAAC,EAAE;AAC9C,MAAA,MAAM,IAAIR,SAAS,CACjBlF,aAAa,CAACC,mBAAmB,CAC9BkF,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAC7BA,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CACvCA,OAAO,CAAC,aAAa,EAAE7C,mBAAmB,CAACuD,oBAAoB,CAAC,CACzE,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAAEtE,EAAE,CAAA,UAAA,CAAS,CAACoE,WAAW,CAAE,EAAE;MAC9B,MAAM,IAAIT,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC,CACjCA,OAAO,CAAC,QAAQ,EAAE,YAAY,CACvC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,OAAOO,YAAY,CAAA;AACrB,GAAA;EAEA,SAAS5C,UAAUA,CAACiC,EAAE,EAAE;AACtB,IAAA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACS,QAAQ,CAAApC,OAAA,CAAQ2B,EAAE,CAAC,CAAA,IAAIiB,OAAO,CAACjB,EAAE,CAAC,CAAA;AAChE,GAAA;;AAGA;AACA,EAAA,SAASgB,oBAAoBA,CAACE,GAAG,EAAEhC,SAAS,EAAE;IAC5C,IAAGgC,GAAG,CAAC9B,MAAM,GAAG,CAAC,IAAIF,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;AACzC,MAAA,OAAA,EAAA,CAAAL,MAAA,CAAUG,SAAS,EAAAH,GAAAA,CAAAA,CAAAA,MAAA,CAAImC,GAAG,CAAA,CAAA;AAC9B,KAAG,MAAM,IAAGA,GAAG,CAAC9B,MAAM,GAAG,CAAC,EAAE;AACxB,MAAA,OAAO8B,GAAG,CAAA;AACd,KAAG,MAAM;AACL,MAAA,OAAO,EAAE,CAAA;AACV,KAAA;AACH,GAAA;;;;;;;;;ACtPA,EAAA,IAAMjG,aAAa,GAAGiB,oBAAA,EAA4B,CAAA;AAClD,EAAA,IAAAiF,UAAA,GAAgCC,gBAAqB;IAA7C7D,mBAAmB,GAAA4D,UAAA,CAAnB5D,mBAAmB,CAAA;AAE3B,EAAA,IAAM8D,mBAAmB,GAAG,CAC1B,UAAU,EACV,WAAW,EACX,SAAS,EACT,cAAc,EACd,eAAe,EACf,YAAY,EACZ,UAAU,EACV,WAAW,EACX,YAAY,EACZ,OAAO,EACP,QAAQ,EACR,WAAW,EACX,UAAU,EACV,OAAO,CACR,CAAA;AAED,EAAA,IAAMC,iBAAiB,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAA;AAErDC,EAAAA,OAAc,GAAG;AACfC,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjBC,IAAAA,eAAe,EAAfA,eAAAA;GACD,CAAA;;AAGD;AACA;AACA;AACA;AACA;AACA,EAAA,SAASD,iBAAiBA,CAACE,IAAI,EAAEC,UAAU,EAAE;AAC3C,IAAA,IAAG,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC7B,MAAM,IAAIvB,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAC1BA,OAAO,CAAC,QAAQ,EAAE,wBAAwB,CACnD,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAACiB,mBAAmB,CAACZ,QAAQ,CAACkB,UAAU,CAAC,EAAE;AAC5C,MAAA,MAAM,IAAIxB,SAAS,CACjBlF,aAAa,CAACgB,WAAW,CACtBmE,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CACpCA,OAAO,CAAC,YAAY,EAAEuB,UAAU,CAAC,CACjCvB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAC7BA,OAAO,CAAC,gBAAgB,EAAE7C,mBAAmB,CAAC8D,mBAAmB,CAAC,CAC3E,CAAK,CAAA;AACF,KAAA;AAEDK,IAAAA,IAAI,CAACjD,SAAS,CAACkD,UAAU,CAAC,GAAGC,eAAO,CAAA,IAAA,CAAA7C,MAAA,CAAM4C,UAAU,CAAE,CAAC,CAAA;AACzD,GAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASF,eAAeA,CAACC,IAAI,EAAEC,UAAU,EAAE;AACzC,IAAA,IAAG,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC7B,MAAM,IAAIvB,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAC1BA,OAAO,CAAC,QAAQ,EAAE,wBAAwB,CACnD,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAACkB,iBAAiB,CAACb,QAAQ,CAACkB,UAAU,CAAC,EAAE;AAC1C,MAAA,MAAM,IAAIxB,SAAS,CACjBlF,aAAa,CAACgB,WAAW,CACtBmE,OAAO,CAAC,QAAQ,EAAE,eAAe,CAAC,CAClCA,OAAO,CAAC,YAAY,EAAEuB,UAAU,CAAC,CACjCvB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAC7BA,OAAO,CAAC,gBAAgB,EAAE7C,mBAAmB,CAAC+D,iBAAiB,CAAC,CACzE,CAAK,CAAA;AACF,KAAA;IAEDI,IAAI,CAACC,UAAU,CAAC,GAAGC,eAAO,MAAA7C,MAAA,CAAM4C,UAAU,CAAE,CAAC,CAAA;AAC/C,GAAA;;;;;;;;;AChFA,EAAA,IAAAR,UAAA,GAAejF,gBAAqB;IAA5BM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE,CAAA;AAGVqF,EAAAA,cAAc,GAAG;AACfC,IAAAA,cAAc,EAAdA,cAAAA;GACD,CAAA;EAGD,SAASA,cAAcA,CAACjC,OAAO,EAAE;AAC/B,IAAA,OACErD,EAAE,CAACM,MAAM,CAAC+C,OAAO,CAAC,KAAKA,OAAO,CAACC,IAAI,KAAK,QAAQ,IAAID,OAAO,CAACE,IAAI,KAAK,eAAe,CAAC,CAAA;AAEzF,GAAA;;;;;;;;;ACZA,EAAA,IAAAoB,UAAA,GAA+DjF,cAAA,EAAwB;IAA/EM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IAAEF,qBAAqB,GAAA6E,UAAA,CAArB7E,qBAAqB;IAAEC,uBAAuB,GAAA4E,UAAA,CAAvB5E,uBAAuB,CAAA;AAC1D,EAAA,IAAAwF,WAAA,GAA2BX,uBAA6B;IAAhDU,cAAc,GAAAC,WAAA,CAAdD,cAAc,CAAA;AAEtBE,EAAAA,eAAc,GAAG;AACf/C,IAAAA,IAAI,EAAE,iBAAiB;IACvBoB,IAAI,EAAE,EAAE;AACRC,IAAAA,KAAK,EAAE2B,WAAW;AAClB1B,IAAAA,OAAO,EAAE2B,aAAAA;GACV,CAAA;EAED,SAASD,WAAWA,CAACE,KAAK,EAAE;AAC1B,IAAA,IAAG,CAAE3F,EAAE,CAACM,MAAM,CAACqF,KAAK,CAAE,IAAIL,cAAc,CAACK,KAAK,CAAC,EAAE;AAC/C,MAAA,OAAA;AACD,KAAA;AAEDA,IAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC9F,uBAAuB,CAAC,CAAA;AAC/C4F,IAAAA,KAAK,CAACC,SAAS,CAACE,GAAG,CAAChG,qBAAqB,CAAC,CAAA;AAC5C,GAAA;EAEA,SAAS4F,aAAaA,CAACC,KAAK,EAAE;AAC5B,IAAA,IAAG,CAAE3F,EAAE,CAACM,MAAM,CAACqF,KAAK,CAAE,IAAIL,cAAc,CAACK,KAAK,CAAC,EAAE;AAC/C,MAAA,OAAA;AACD,KAAA;AAEDA,IAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC/F,qBAAqB,CAAC,CAAA;AAC7C6F,IAAAA,KAAK,CAACC,SAAS,CAACE,GAAG,CAAC/F,uBAAuB,CAAC,CAAA;AAC9C,GAAA;;;;;;;;;AC1BA,EAAA,IAAA4E,UAAA,GAA+DjF,cAAA,EAAwB;IAA/EM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IAAEF,qBAAqB,GAAA6E,UAAA,CAArB7E,qBAAqB;IAAEC,uBAAuB,GAAA4E,UAAA,CAAvB5E,uBAAuB,CAAA;AAC1D,EAAA,IAAAwF,WAAA,GAA2BX,uBAA6B;IAAhDU,cAAc,GAAAC,WAAA,CAAdD,cAAc,CAAA;AAGtBS,EAAAA,wBAAc,GAAG;AACftD,IAAAA,IAAI,EAAE,0BAA0B;IAChCoB,IAAI,EAAE,EAAE;AACRC,IAAAA,KAAK,EAAE2B,WAAW;AAClB1B,IAAAA,OAAO,EAAE2B,aAAAA;GACV,CAAA;EAGD,SAASD,WAAWA,CAACE,KAAK,EAAE;AAC1B,IAAA,IAAG,CAAE3F,EAAE,CAACM,MAAM,CAACqF,KAAK,CAAE,IAAIL,cAAc,CAACK,KAAK,CAAC,EAAE;AAC/C,MAAA,OAAA;AACD,KAAA;AAEDA,IAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC9F,uBAAuB,CAAC,CAAA;AAC/C4F,IAAAA,KAAK,CAACC,SAAS,CAACE,GAAG,CAAChG,qBAAqB,CAAC,CAAA;AAC5C,GAAA;EAEA,SAAS4F,aAAaA,CAACC,KAAK,EAAE;AAC5B,IAAA,IAAG,CAAE3F,EAAE,CAACM,MAAM,CAACqF,KAAK,CAAE,IAAIL,cAAc,CAACK,KAAK,CAAC,EAAE;AAC/C,MAAA,OAAA;AACD,KAAA;AAEDA,IAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC/F,qBAAqB,CAAC,CAAA;AAC7C6F,IAAAA,KAAK,CAACC,SAAS,CAACE,GAAG,CAAC/F,uBAAuB,CAAC,CAAA;AAC9C,GAAA;;;;;;;;;AC5BA,EAAA,IAAA4E,UAAA,GAAoDjF,gBAAwB;IAApEC,aAAa,GAAAgF,UAAA,CAAbhF,aAAa;IAAEE,wBAAwB,GAAA8E,UAAA,CAAxB9E,wBAAwB,CAAA;AAC/C,EAAA,IAAA0F,WAAA,GAA2BX,uBAA6B;IAAhDU,cAAc,GAAAC,WAAA,CAAdD,cAAc,CAAA;AAGtBU,EAAAA,kBAAc,GAAG;AACfvD,IAAAA,IAAI,EAAE,oBAAoB;IAC1BoB,IAAI,EAAE,EAAE;AACRoC,IAAAA,IAAI,EAAJA,IAAI;AACJnC,IAAAA,KAAK,EAAE2B,WAAW;AAClB1B,IAAAA,OAAO,EAAE2B,aAAAA;GACV,CAAA;EAGD,SAASO,IAAIA,CAACN,KAAK,EAAE;AACrB;AACEO,IAAAA,aAAa,CAAC,KAAK,EAAEP,KAAK,CAAC,CAAA;AAC7B,GAAA;EAEA,SAASF,WAAWA,CAACE,KAAK,EAAE;AAC1BO,IAAAA,aAAa,CAAC,IAAI,EAAEP,KAAK,CAAC,CAAA;AAC5B,GAAA;EAEA,SAASD,aAAaA,CAACC,KAAK,EAAE;AAC5BO,IAAAA,aAAa,CAAC,KAAK,EAAEP,KAAK,CAAC,CAAA;AAC7B,GAAA;;AAGA;AACA,EAAA,SAASO,aAAaA,CAACC,gBAAgB,EAAEC,KAAK,EAAE;IAC9C,IAAI;AACF,MAAA,IAAG,CAACd,cAAc,CAACc,KAAK,CAAC,EAAE;AACzB,QAAA,OAAA;AACD,OAAA;MAED,IAAMC,SAAS,GAAGD,KAAK,CAAA;AAEvB,MAAA,IAAGD,gBAAgB,EAAE;AACnBE,QAAAA,SAAS,CAACC,eAAe,CAAC,UAAU,CAAC,CAAA;AACrCD,QAAAA,SAAS,CAACT,SAAS,CAACC,MAAM,CAAClG,aAAa,CAAC,CAAA;AACzC0G,QAAAA,SAAS,CAACT,SAAS,CAACC,MAAM,CAAChG,wBAAwB,CAAC,CAAA;AAC1D,OAAK,MAAM;AACLwG,QAAAA,SAAS,CAACE,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;AACxCF,QAAAA,SAAS,CAACT,SAAS,CAACE,GAAG,CAACnG,aAAa,CAAC,CAAA;AACtC0G,QAAAA,SAAS,CAACT,SAAS,CAACE,GAAG,CAACjG,wBAAwB,CAAC,CAAA;AAClD,OAAA;KACF,CAAC,OAAM2G,CAAC,EAAE;MACTC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,CAAC,CAACG,OAAO,CAAC,CAAA;AACrE,KAAA;AACH,GAAA;;;;;;;;;AChDA9D,EAAAA,OAAc,GAAG;IACf2C,eAAe,EAAE9F,sBAA8B,EAAA;IAC/CqG,wBAAwB,EAAEnB,+BAAwC,EAAA;IAClEoB,kBAAkB,EAAEY,yBAAiC,EAAA;GACtD,CAAA;;;;;;;;;ACJD,EAAA,IAAAjC,UAAA,GAAuBjF,gBAAqB;IAApCM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IAAEM,MAAM,GAAAqE,UAAA,CAANrE,MAAM,CAAA;AAElB,EAAA,IAAMuG,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;AAE7BC,EAAAA,gBAAc,GAAG;AACfC,IAAAA,6BAA6B,EAA7BA,6BAA6B;AAC7BC,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,aAAa,EAAbA,aAAAA;GACD,CAAA;AAED,EAAA,SAASF,6BAA6BA,CAACG,QAAQ,EAAEC,IAAI,EAAEC,oBAAoB,EAAE;AAC3E,IAAA,IAAIC,QAAQ,CAAA;IAEZ,IAAGF,IAAI,CAACvE,MAAM,EAAE;AACdyE,MAAAA,QAAQ,GAAGL,cAAc,CAACG,IAAI,CAACvE,MAAM,CAAC,CAAA;AAC1C,KAAG,MAAM;MACLyE,QAAQ,GAAGD,oBAAoB,IAAI,GAAG,CAAA;AACvC,KAAA;IAEDF,QAAQ,GAAA,EAAA,CAAA3E,MAAA,CAAM2E,QAAQ,EAAA3E,MAAA,CAAG8E,QAAQ,CAAE,CAAA;AACnCH,IAAAA,QAAQ,GAAA3E,GAAAA,CAAAA,MAAA,CAAO2E,QAAQ,EAAG,GAAA,CAAA,CAAA;IAE1B,OAAO,IAAII,MAAM,CAACJ,QAAQ,EAAED,aAAa,CAACE,IAAI,CAACI,SAAS,CAAC,CAAC,CAAA;AAC5D,GAAA;EAEA,SAASP,cAAcA,CAACQ,UAAU,EAAE;AAClC,IAAA,IAAIN,QAAQ,CAAA;IACZ,IAAMO,GAAG,GAAGnH,MAAM,CAACI,KAAK,CAAC8G,UAAU,CAAC,IAAI,EAAE,CAAA;AAE1C,IAAA,IAAGC,GAAG,CAACC,GAAG,IAAID,GAAG,CAACE,GAAG,EAAE;AACrB,MAAA,IAAGhG,MAAM,CAAC8F,GAAG,CAACC,GAAG,CAAC,GAAG/F,MAAM,CAAC8F,GAAG,CAACE,GAAG,CAAC,EAAE;AACpC,QAAA,IAAMC,GAAG,GAAGH,GAAG,CAACC,GAAG,CAAA;AAEnBD,QAAAA,GAAG,CAACC,GAAG,GAAGD,GAAG,CAACE,GAAG,CAAA;QACjBF,GAAG,CAACE,GAAG,GAAGC,GAAG,CAAA;AACd,OAAA;AAEDV,MAAAA,QAAQ,GAAA3E,GAAAA,CAAAA,MAAA,CAAOkF,GAAG,CAACC,GAAG,EAAAnF,GAAAA,CAAAA,CAAAA,MAAA,CAAIkF,GAAG,CAACE,GAAG,EAAG,GAAA,CAAA,CAAA;AACxC,KAAG,MAAM,IAAGF,GAAG,CAACC,GAAG,EAAE;AACjBR,MAAAA,QAAQ,OAAA3E,MAAA,CAAOkF,GAAG,CAACC,GAAG,EAAI,IAAA,CAAA,CAAA;AAC9B,KAAG,MAAM,IAAGD,GAAG,CAACE,GAAG,EAAE;AACjBT,MAAAA,QAAQ,SAAA3E,MAAA,CAASkF,GAAG,CAACE,GAAG,EAAG,GAAA,CAAA,CAAA;KAC5B,MAAM,IAAG3H,EAAE,CAACI,MAAM,CAACqH,GAAG,CAAC,EAAE;AACxBP,MAAAA,QAAQ,GAAA3E,KAAAA,CAAAA,MAAA,CAASkF,GAAG,EAAG,GAAA,CAAA,CAAA;AACxB,KAAA;AAED,IAAA,OAAOP,QAAQ,CAAA;AACjB,GAAA;EAEA,SAASD,aAAaA,CAACM,SAAS,EAAE;AAChC,IAAA,IAAGA,SAAS,EAAE;AACZ,MAAA,OAAOV,UAAU,CAACrE,IAAI,CAAC,EAAE,CAAC,CAAA;AAC9B,KAAG,MAAM;MACL,OAAO,EAAA,CAAAD,MAAA,CAAIsE,UAAU,EAAA,CAAE,GAAG,CAAErE,CAAAA,CAAAA,IAAI,CAAC,EAAE,CAAC,CAAA;AACrC,KAAA;AACH,GAAA;;;;;;;;;ACvDA,EAAA,IAAAmC,UAAA,GAA0CjF,yBAA8B;IAAhEqH,6BAA6B,GAAApC,UAAA,CAA7BoC,6BAA6B,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAc,EAAAA,qBAAc,GAAG,SAASA,qBAAqBA,CAACC,KAAK,EAAEX,IAAI,EAAE;IAC3D,IAAG,CAACA,IAAI,CAAC7D,IAAI,IAAI6D,IAAI,CAAC7D,IAAI,KAAK,OAAO,EAAE;MACtC,OAAO,IAAI,CAAC;AACb,KAAA;;IAED,IAAG,CAACwE,KAAK,EAAE;AACT,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IAED,IAAMZ,QAAQ,GAAGC,IAAI,CAACY,eAAe,GAAG,eAAe,GAAG,YAAY,CAAA;AACtE,IAAA,IAAMC,KAAK,GAAGjB,6BAA6B,CAACG,QAAQ,EAAEC,IAAI,CAAC,CAAA;AAE3D,IAAA,OAAOa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;ACxBD,EAAA,IAAAnD,UAAA,GAA0CjF,yBAA8B;IAAhEqH,6BAA6B,GAAApC,UAAA,CAA7BoC,6BAA6B,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAmB,EAAAA,cAAc,GAAG,SAASA,cAAcA,CAACJ,KAAK,EAAEX,IAAI,EAAE;IACpD,IAAG,CAACA,IAAI,CAAC7D,IAAI,IAAI6D,IAAI,CAAC7D,IAAI,KAAK,OAAO,EAAE;MACtC,OAAO,IAAI,CAAC;AACb,KAAA;;AAED,IAAA,IAAG,CAACwE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AACtC,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IAED,IAAMZ,QAAQ,GAAGC,IAAI,CAACY,eAAe,GAAG,YAAY,GAAG,SAAS,CAAA;AAChE,IAAA,IAAMC,KAAK,GAAGjB,6BAA6B,CAACG,QAAQ,EAAEC,IAAI,CAAC,CAAA;AAE3D,IAAA,OAAOa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;ACxBD,EAAA,IAAAnD,UAAA,GAA0CjF,yBAA8B;IAAhEqH,6BAA6B,GAAApC,UAAA,CAA7BoC,6BAA6B,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAoB,EAAAA,kBAAc,GAAG,SAASA,kBAAkBA,CAACL,KAAK,EAAEX,IAAI,EAAE;IACxD,IAAG,CAACA,IAAI,CAAC7D,IAAI,IAAI6D,IAAI,CAAC7D,IAAI,KAAK,OAAO,EAAE;MACtC,OAAO,IAAI,CAAC;AACb,KAAA;;IAED,IAAG,CAACwE,KAAK,EAAE;AACT,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,IAAMZ,QAAQ,GAAG,6DAA6D,CAAC;AAC/E,IAAA,IAAMc,KAAK,GAAGjB,6BAA6B,CAACG,QAAQ,EAAEC,IAAI,CAAC,CAAA;AAE3D,IAAA,OAAOa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,IAAME,KAAK,GAAG,+HAA+H,CAAA;;AAE7I;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,EAAAA,cAAc,GAAG,SAASA,cAAcA,CAACN,KAAK,EAAEX,IAAI,EAAE;IACpD,IAAG,CAACA,IAAI,CAAC7D,IAAI,IAAI6D,IAAI,CAAC7D,IAAI,KAAK,OAAO,EAAE;MACtC,OAAO,IAAI,CAAC;AACb,KAAA;;AAED,IAAA,IAAG,CAACwE,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AACtC,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,IAAMO,UAAU,GAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAA;AAEnC,IAAA,IAAGD,UAAU,CAACzF,MAAM,KAAK,CAAC,EAAE;AAC1B,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,IAAA2F,WAAA,GAAAC,cAAA,CAA2BH,UAAU,EAAA,CAAA,CAAA;AAA9BI,MAAAA,OAAO,GAAAF,WAAA,CAAA,CAAA,CAAA;AAAEG,MAAAA,OAAO,GAAAH,WAAA,CAAA,CAAA,CAAA,CAAA;IAEvB,IAAGE,OAAO,CAAC7F,MAAM,GAAG,EAAE,IAAI8F,OAAO,CAAC9F,MAAM,GAAG,GAAG,EAAE;AAC9C,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,IAAM+F,WAAW,GAAGD,OAAO,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAA;AAEtC,IAAA,IAAGK,WAAW,CAACC,IAAI,CAAC,UAAAC,IAAI,EAAA;AAAA,MAAA,OAAIA,IAAI,CAACjG,MAAM,GAAG,EAAE,CAAA;AAAA,KAAA,CAAC,EAAE;AAC7C,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,OAAOoF,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;AC/CD,EAAA,IAAAnD,UAAA,GAAejF,gBAAqB;IAA5BM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE,CAAA;AACV,EAAA,IAAAuF,WAAA,GAA0CX,yBAA8B;IAAhEmC,6BAA6B,GAAAxB,WAAA,CAA7BwB,6BAA6B,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA+B,EAAAA,eAAc,GAAG,SAASA,eAAeA,CAAChB,KAAK,EAAEX,IAAI,EAAE;AACrD,IAAA,IAAG,CAAEnH,EAAE,CAACI,MAAM,CAAC+G,IAAI,CAACvE,MAAM,CAAE,IAAI,CAAE5C,EAAE,CAACM,MAAM,CAAC6G,IAAI,CAACvE,MAAM,CAAE,EAAE;MACzD,OAAO,IAAI,CAAC;AACb,KAAA;;AAED,IAAA,IAAG,OAAOkF,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,EAAE;AACpE,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IAED,IAAMZ,QAAQ,GAAG,gBAAgB,CAAA;IACjC,IAAMc,KAAK,GAAGjB,6BAA6B,CAACG,QAAQ,EAAEC,IAAI,EAAE,GAAG,CAAC,CAAA;AAEhE,IAAA,OAAOa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;ACzBD,EAAA,IAAAnD,UAAA,GAA0CjF,yBAA8B;IAAhEqH,6BAA6B,GAAApC,UAAA,CAA7BoC,6BAA6B,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgC,EAAAA,eAAc,GAAG,SAASA,eAAeA,CAACjB,KAAK,EAAEX,IAAI,EAAE;IACrD,IAAG,CAACA,IAAI,CAAC7D,IAAI,IAAI6D,IAAI,CAAC7D,IAAI,KAAK,QAAQ,EAAE;MACvC,OAAO,IAAI,CAAC;AACb,KAAA;;AAED,IAAA,IAAGwE,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;AACjE,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;IAED,IAAMZ,QAAQ,GAAGC,IAAI,CAACY,eAAe,GAAG,UAAU,GAAG,OAAO,CAAA;AAC5D,IAAA,IAAMC,KAAK,GAAGjB,6BAA6B,CAACG,QAAQ,EAAEC,IAAI,CAAC,CAAA;AAE3D,IAAA,OAAOa,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;ACvBD,EAAA,IAAAnD,UAAA,GAAejF,gBAAqB;IAA5BM,EAAE,GAAA2E,UAAA,CAAF3E,EAAE,CAAA;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACAgJ,EAAAA,cAAc,GAAG,SAASA,cAAcA,CAAClB,KAAK,EAAEX,IAAI,EAAE;AACpD,IAAA,IAAG,CAACA,IAAI,CAACa,KAAK,EAAE;MACd,OAAO,IAAI,CAAC;AACb,KAAA;;AAED,IAAA,IAAed,QAAQ,GAAKC,IAAI,CAAxBa,KAAK,CAAA;AACb,IAAA,IAAMA,KAAK,GAAGhI,EAAE,CAACM,MAAM,CAAC4G,QAAQ,CAAC,GAAGA,QAAQ,GAAG,IAAII,MAAM,CAACJ,QAAQ,CAAC,CAAA;AAEnE,IAAA,OAAOc,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAAA;GACzB,CAAA;;;;;;;;;;;;;;;;;;;ECTamB,sBAAA,GAAG,SAASA,sBAAsBA,CAACnB,KAAK,EAAEX,IAAI,EAAE+B,CAAC,EAAEC,MAAM,EAAE;AACvE,IAAA,IAAG,CAAChC,IAAI,CAACiC,QAAQ,EAAE;MACjB,OAAO,IAAI,CAAC;AACb,KAAA;;IAED,IAAGtB,KAAK,KAAK,EAAE,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;AAC/C,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AAED,IAAA,IAAIuB,MAAM,CAAA;IAEV,QAAOlC,IAAI,CAAC7D,IAAI;AAChB,MAAA,KAAK,UAAU;AAAG+F,QAAAA,MAAM,GAAGF,MAAM,CAACG,OAAO,IAAIxB,KAAK,KAAK,IAAI,CAAA;AAAE,QAAA,MAAA;AAC7D,MAAA;AAAkBuB,QAAAA,MAAM,GAAGvB,KAAK,CAAClF,MAAM,GAAG,CAAC,CAAA;AAAE,QAAA,MAAA;AAC5C,KAAA;AAED,IAAA,OAAOyG,MAAM,CAAA;GACd,CAAA;;;;;;;;;AC3BDlG,EAAAA,UAAc,GAAG;IACf0E,qBAAqB,EAAEnI,4BAAmC,EAAA;IAC1DwI,cAAc,EAAEtD,qBAA4B,EAAA;IAC5CuD,kBAAkB,EAAEvB,yBAAiC,EAAA;IACrDwB,cAAc,EAAEmB,qBAA4B,EAAA;IAC5CT,eAAe,EAAEU,sBAA6B,EAAA;IAC9CT,eAAe,EAAEU,sBAA6B,EAAA;IAC9CT,cAAc,EAAEU,qBAA4B,EAAA;IAC5CT,sBAAsB,EAAEU,6BAAqC,EAAA;GAC9D,CAAA;;;;;;;;;ACPD,EAAA,IAAM9G,OAAO,GAAGnD,cAAA,EAAoB,CAAA;AACpC,EAAA,IAAMjB,aAAa,GAAGmG,oBAAA,EAA2B,CAAA;AACjD,EAAA,IAAAD,UAAA,GAgBIiC,gBAAoB;IAftBjH,aAAa,GAAAgF,UAAA,CAAbhF,aAAa;IACbE,wBAAwB,GAAA8E,UAAA,CAAxB9E,wBAAwB;IACxBD,qBAAqB,GAAA+E,UAAA,CAArB/E,qBAAqB;IACrBE,qBAAqB,GAAA6E,UAAA,CAArB7E,qBAAqB;IACrBC,uBAAuB,GAAA4E,UAAA,CAAvB5E,uBAAuB;IACvBC,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IACFM,MAAM,GAAAqE,UAAA,CAANrE,MAAM;IACNU,kBAAkB,GAAA2D,UAAA,CAAlB3D,kBAAkB;IAClBC,cAAc,GAAA0D,UAAA,CAAd1D,cAAc;IACdC,iBAAiB,GAAAyD,UAAA,CAAjBzD,iBAAiB;IACjBG,0BAA0B,GAAAsD,UAAA,CAA1BtD,0BAA0B;IAC1BC,6BAA6B,GAAAqD,UAAA,CAA7BrD,6BAA6B;IAC7BH,WAAW,GAAAwD,UAAA,CAAXxD,WAAW;IACXC,WAAW,GAAAuD,UAAA,CAAXvD,WAAW;IACXG,UAAU,GAAAoD,UAAA,CAAVpD,UAAU,CAAA;AAEZ,EAAA,IAAMqI,iBAAiB,GAAGL,iBAAA,EAAuB,CAAA;AAEjD,EAAA,IAAMM,cAAc,GAAG7H,MAAM,CAACe,MAAM,CAACF,OAAO,CAAC,CAAA;AAC7C,EAAA,IAAMa,kBAAkB,GAAGzC,cAAc,CAAC4B,OAAO,CAAC,CAAA;AAClD,EAAA,IAAMiH,yBAAyB,GAAG9H,MAAM,CAAC+H,OAAO,CAACH,iBAAiB,CAAC,CAAA;AACnE,EAAA,IAAMtF,oBAAoB,GAAGpD,iBAAiB,CAAC0I,iBAAiB,CAAC,CAAC;;AAGpDI,EAAAA,UAAA,GAAGC,UAAU,CAAA;;AAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASA,UAAUA,CAAC5G,OAAO,EAAE8D,IAAI,EAAE;AACjC,IAAA,IAAG,CAACnH,EAAE,CAACM,MAAM,CAAC+C,OAAO,CAAC,EAAE;MACtB,MAAM,IAAIM,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAC7BA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CACnC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAACrC,UAAU,CAAC8B,OAAO,CAACG,EAAE,CAAC,IAAI,CAACrC,WAAW,CAACkC,OAAO,CAAC,EAAE;MACnD,MAAM,IAAIM,SAAS,CACjBlF,aAAa,CACVa,4BAA4B,CAC5BsE,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CACvBA,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAC9BA,OAAO,CAAC,QAAQ,EAAE,sBAAsB,CACjD,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAGxC,WAAW,CAACiC,OAAO,CAACG,EAAE,CAAC,CAACZ,MAAM,KAAK,CAAC,IAAI,CAACzB,WAAW,CAACkC,OAAO,CAAC,EAAE;MAChE,MAAM,IAAIM,SAAS,CACjBlF,aAAa,CACVU,2BAA2B,CAC3ByE,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CACvBA,OAAO,CAAC,UAAU,EAAE,SAAS,CACtC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,OAAOP,OAAO,CAAC6G,QAAQ,KAAK,WAAW,IAAI,OAAO7G,OAAO,CAAC6G,QAAQ,KAAK,UAAU,EAAE;MACpF,MAAM,IAAIvG,SAAS,CACjBlF,aAAa,CACVa,4BAA4B,CAC5BsE,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAC7BA,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAC9BA,OAAO,CAAC,QAAQ,EAAE,YAAY,CACvC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAGzC,WAAW,CAACkC,OAAO,CAAC,EAAE;MACvB,IAAI,CAACE,IAAI,GAAG,eAAe,CAAA;AAC5B,KAAA;AAED,IAAA,IAAI,CAACC,EAAE,GAAGH,OAAO,CAACG,EAAE,CAAA;IACpB,IAAI,CAACH,OAAO,GAAGA,OAAO,CAAA;AACtB,IAAA,IAAI,CAACwG,cAAc,GAAG,IAAIM,GAAG,EAAE,CAAA;AAC/B,IAAA,IAAI,CAACP,iBAAiB,GAAG,IAAIO,GAAG,CAACL,yBAAyB,CAAC,CAAA;AAC3D,IAAA,IAAI,CAACjH,OAAO,GAAG,IAAIsH,GAAG,EAAE,CAAA;AACxB,IAAA,IAAI,CAAChH,UAAU,GAAG,IAAIgH,GAAG,EAAE,CAAA;AAAC,IAAA,IAAAC,SAAA,GAAAC,0BAAA,CAERR,cAAc,CAAA;MAAAS,KAAA,CAAA;AAAA,IAAA,IAAA;MAAlC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAoC;AAAA,QAAA,IAA1BvH,MAAM,GAAAoH,KAAA,CAAAxC,KAAA,CAAA;AACd,QAAA,IAAQrF,IAAI,GAAiCS,MAAM,CAA3CT,IAAI;UAAEoB,IAAI,GAA2BX,MAAM,CAArCW,IAAI;UAAEoC,IAAI,GAAqB/C,MAAM,CAA/B+C,IAAI;UAAEnC,KAAK,GAAcZ,MAAM,CAAzBY,KAAK;UAAEC,OAAO,GAAKb,MAAM,CAAlBa,OAAO,CAAA;AAExC,QAAA,IAAI,CAAC8F,cAAc,CAACa,GAAG,CAACjI,IAAI,EAAE;AAAEoB,UAAAA,IAAI,EAAJA,IAAI;AAAEoC,UAAAA,IAAI,EAAJA,IAAI;AAAEnC,UAAAA,KAAK,EAALA,KAAK;AAAEC,UAAAA,OAAO,EAAPA,OAAAA;AAAO,SAAE,CAAC,CAAA;AAE7D,QAAA,IAAG/D,EAAE,CAAA,UAAA,CAAS,CAACiG,IAAI,CAAC,EAAE;AACpBA,UAAAA,IAAI,CAAC,IAAI,CAAC5C,OAAO,CAAC,CAAA;AACnB,SAAA;AACF,OAAA;AAAA,KAAA,CAAA,OAAAsH,GAAA,EAAA;MAAAP,SAAA,CAAA5D,CAAA,CAAAmE,GAAA,CAAA,CAAA;AAAA,KAAA,SAAA;AAAAP,MAAAA,SAAA,CAAAQ,CAAA,EAAA,CAAA;AAAA,KAAA;AAED,IAAA,IAAG5K,EAAE,CAACM,MAAM,CAAC6G,IAAI,CAAC,EAAE;AAClB,MAAA,IAAI,CAAC0D,OAAO,CAAA3G,cAAA,CAAAA,cAAA,KAAMiD,IAAI,CAAA,EAAA,EAAA,EAAA;QAAE2D,OAAO,EAAEzH,OAAO,CAACG,EAAAA;AAAE,OAAA,CAAE,CAAC,CAAA;AAC/C,KAAA;IAEDuH,UAAU,CAAC1H,OAAO,CAAC,CAAA;AACrB,GAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA4G,UAAU,CAAChI,SAAS,CAAC4I,OAAO,GAAG,SAASA,OAAOA,CAAC1D,IAAI,EAAE;AACpD,IAAA,IAAM6D,YAAY,GAAG,IAAI,CAAC7D,IAAI,CAAA;AAE9B,IAAA,IAAGnH,EAAE,CAACM,MAAM,CAAC0K,YAAY,CAAC,IAAIhL,EAAE,CAACM,MAAM,CAAC6G,IAAI,CAAC,EAAE;MAC7C,IAAI,CAACA,IAAI,GAAG7G,MAAM,CAACK,cAAc,CAACqK,YAAY,EAAE7D,IAAI,CAAC,CAAA;AACzD,KAAG,MAAM;MACL,IAAI,CAACA,IAAI,GAAGA,IAAI,CAAA;AACjB,KAAA;AAED,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;EACA8C,UAAU,CAAChI,SAAS,CAACgJ,UAAU,GAAG,SAASA,UAAUA,CAACvG,GAAG,EAAE;AACzD,IAAA,IAAMsG,YAAY,GAAG,IAAI,CAAC7D,IAAI,CAAA;AAE9B,IAAA,IAAG,CAACnH,EAAE,CAACM,MAAM,CAAC0K,YAAY,CAAC,EAAE;AAC3B,MAAA,OAAO,IAAI,CAAA;AACZ,KAAA;AAED,IAAA,IAAGtG,GAAG,EAAE;AACN,MAAA,OAAO,IAAI,CAACyC,IAAI,CAACzC,GAAG,CAAC,CAAA;AACzB,KAAG,MAAM;MACL,OAAO,IAAI,CAACyC,IAAI,CAAA;AACjB,KAAA;AAED,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;;AAED;AACA;AACA;AACA;AACA;EACA8C,UAAU,CAAChI,SAAS,CAACiJ,OAAO,GAAG,SAASA,OAAOA,CAACxG,GAAG,EAAE;AACnD,IAAA,IAAGA,GAAG,IAAI,IAAI,CAACyC,IAAI,EAAE;AACnB,MAAA,OAAO,OAAO,IAAI,CAACA,IAAI,CAACzC,GAAG,CAAC,KAAK,WAAW,GAAG,IAAI,CAACyC,IAAI,CAACzC,GAAG,CAAC,GAAG,IAAI,CAAA;AACxE,KAAG,MAAM;AACL,MAAA,OAAO,IAAI,CAACyC,IAAI,IAAI,IAAI,CAAA;AACzB,KAAA;GACF,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;EACA8C,UAAU,CAAChI,SAAS,CAACkJ,SAAS,GAAG,SAASA,SAASA,CAAC1I,IAAI,EAAEC,SAAS,EAAE;AACnED,IAAAA,IAAI,GAAGzC,EAAE,CAACQ,MAAM,CAACiC,IAAI,CAAC,GAAGA,IAAI,CAACE,IAAI,EAAE,CAACyI,WAAW,EAAE,GAAG,EAAE,CAAA;AACvD1I,IAAAA,SAAS,GAAG1C,EAAE,CAACQ,MAAM,CAACkC,SAAS,CAAC,GAAGA,SAAS,CAACC,IAAI,EAAE,CAACyI,WAAW,EAAE,GAAG,EAAE,CAAA;AAEtE,IAAA,IAAMpH,UAAU,GAAGhD,kBAAkB,CAACyB,IAAI,EAAEC,SAAS,CAAC,CAAA;IAEtD,IAAG,IAAI,CAACG,OAAO,CAACjC,GAAG,CAACoD,UAAU,CAAC,EAAE;AAC/B,MAAA,OAAO,IAAI,CAACnB,OAAO,CAACwI,GAAG,CAACrH,UAAU,CAAC,CAAA;AACvC,KAAG,MAAM;AACL,MAAA,OAAO,IAAI,CAAA;AACZ,KAAA;GACF,CAAA;;AAED;AACA;AACA;AACA;EACAiG,UAAU,CAAChI,SAAS,CAACqJ,UAAU,GAAG,SAASC,gBAAgBA,CAACjI,IAAI,EAAE;AAChEA,IAAAA,IAAI,GAAGtD,EAAE,CAACQ,MAAM,CAAC8C,IAAI,CAAC,GAAGA,IAAI,CAAC8H,WAAW,EAAE,CAACzI,IAAI,EAAE,GAAG,EAAE,CAAA;AAEvD,IAAA,IAAME,OAAO,GAAG;MACd,SAAS,EAAA,IAAI,CAACgH,cAAc;MAC5B2B,KAAK,EAAE,IAAI,CAAC3I,OAAAA;KACb,CAAA;IAED,IAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAACoB,QAAQ,CAACX,IAAI,CAAC,EAAE;MACtC,OAAOT,OAAO,CAACS,IAAI,CAAC,CAAA;AACxB,KAAG,MAAM;AACL,MAAA,OAAOT,OAAO,CAAA;AACf,KAAA;GACF,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAoH,UAAU,CAAChI,SAAS,CAACwJ,SAAS,GAAG,SAASA,SAASA,CAACvI,MAAM,EAAE;AAC1D,IAAA,IAAMwI,YAAY,GAAGrK,0BAA0B,CAAC6B,MAAM,EAAEQ,kBAAkB,CAAC,CAAA;AAE3E,IAAA,IAAYM,UAAU,GAAiC0H,YAAY,CAA7DjJ,IAAI;MAAcoB,IAAI,GAA2B6H,YAAY,CAA3C7H,IAAI;MAAEoC,IAAI,GAAqByF,YAAY,CAArCzF,IAAI;MAAEnC,KAAK,GAAc4H,YAAY,CAA/B5H,KAAK;MAAEC,OAAO,GAAK2H,YAAY,CAAxB3H,OAAO,CAAA;AAElD,IAAA,IAAG,IAAI,CAAC4H,UAAU,CAAC3H,UAAU,CAAC,EAAE;MAC9B,MAAM,IAAIL,SAAS,CACjBlF,aAAa,CAACc,mBAAmB,CAC9BqE,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAChCA,OAAO,CAAC,OAAO,EAAEI,UAAU,CACpC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAI,CAACnB,OAAO,CAAC6H,GAAG,CAAC1G,UAAU,EAAE;AAAEH,MAAAA,IAAI,EAAJA,IAAI;AAAEoC,MAAAA,IAAI,EAAJA,IAAI;AAAEnC,MAAAA,KAAK,EAALA,KAAK;AAAEC,MAAAA,OAAO,EAAPA,OAAAA;AAAO,KAAE,CAAC,CAAA;AAE5D,IAAA,IAAG/D,EAAE,CAAA,UAAA,CAAS,CAACiG,IAAI,CAAC,EAAE;AACpBA,MAAAA,IAAI,CAAC,IAAI,CAAC2F,UAAU,EAAE,CAAC,CAAA;AACxB,KAAA;AAED,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA3B,UAAU,CAAChI,SAAS,CAAC0J,UAAU,GAAG,SAASA,UAAUA,CAAClJ,IAAI,EAAEC,SAAS,EAAE;AACrE,IAAA,IAAG1C,EAAE,CAACQ,MAAM,CAACiC,IAAI,CAAC,EAAE;MAClBA,IAAI,GAAGA,IAAI,CAACE,IAAI,EAAE,CAACyI,WAAW,EAAE,CAAA;AAChC1I,MAAAA,SAAS,GAAG1C,EAAE,CAACQ,MAAM,CAACkC,SAAS,CAAC,GAAGA,SAAS,CAACC,IAAI,EAAE,CAACyI,WAAW,EAAE,GAAG,EAAE,CAAA;AAEtE,MAAA,IAAMpH,UAAU,GAAGhD,kBAAkB,CAACyB,IAAI,EAAEC,SAAS,CAAC,CAAA;AAEtD,MAAA,OAAO,IAAI,CAACG,OAAO,CAACjC,GAAG,CAACoD,UAAU,CAAC,CAAA;AACvC,KAAG,MAAM;AACL,MAAA,OAAO,IAAI,CAACnB,OAAO,CAACgJ,IAAI,GAAG,CAAC,CAAA;AAC7B,KAAA;GACF,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5B,EAAAA,UAAU,CAAChI,SAAS,CAAC6J,YAAY,GAAG,SAASA,YAAYA,CAAC3H,YAAY,EAAEC,WAAW,EAAEC,aAAa,EAAE;IAClGF,YAAY,GAAG7C,6BAA6B,CAAC6C,YAAY,EAAEC,WAAW,EAAEC,aAAa,EAAEC,oBAAoB,CAAC,CAAA;AAE5G,IAAA,IAAG,IAAI,CAACyH,YAAY,CAAC5H,YAAY,CAAC,EAAE;MAClC,MAAM,IAAIR,SAAS,CACjBlF,aAAa,CAACc,mBAAmB,CAC9BqE,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,CAClCA,OAAO,CAAC,OAAO,EAAEO,YAAY,CACtC,CAAK,CAAA;AACF,KAAA;IAED,IAAI,CAAChB,UAAU,CAACuH,GAAG,CAACvG,YAAY,EAAEC,WAAW,CAAC,CAAA;AAE9C,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;;AAED;AACA;AACA;AACA;EACA6F,UAAU,CAAChI,SAAS,CAAC+J,aAAa,GAAG,SAASA,aAAaA,CAAC1I,IAAI,EAAE;AAChEA,IAAAA,IAAI,GAAGtD,EAAE,CAACQ,MAAM,CAAC8C,IAAI,CAAC,GAAGA,IAAI,CAAC8H,WAAW,EAAE,CAACzI,IAAI,EAAE,GAAG,EAAE,CAAA;AAEvD,IAAA,IAAMQ,UAAU,GAAG;MACjB,SAAS,EAAA,IAAI,CAACyG,iBAAiB;MAC/B4B,KAAK,EAAE,IAAI,CAACrI,UAAAA;KACb,CAAA;IAED,IAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAACc,QAAQ,CAACX,IAAI,CAAC,EAAE;MACtC,OAAOH,UAAU,CAACG,IAAI,CAAC,CAAA;AAC3B,KAAG,MAAM;AACL,MAAA,OAAOH,UAAU,CAAA;AAClB,KAAA;GACF,CAAA;EAED8G,UAAU,CAAChI,SAAS,CAAC8J,YAAY,GAAG,SAASA,YAAYA,CAAC5H,YAAY,EAAE;AACtE,IAAA,IAAGnE,EAAE,CAACQ,MAAM,CAAC2D,YAAY,CAAC,EAAE;MAC1BA,YAAY,GAAGA,YAAY,CAACxB,IAAI,EAAE,CAACyI,WAAW,EAAE,CAAA;AACjD,KAAA;IAED,OACEpL,EAAE,CAACQ,MAAM,CAAC2D,YAAY,CAAC,GACnB,IAAI,CAAChB,UAAU,CAACvC,GAAG,CAACuD,YAAY,CAAC,GACjC,IAAI,CAAChB,UAAU,CAAC0I,IAAI,GAAG,CAAC,CAAA;GAE/B,CAAA;;AAED;AACA;AACA;AACA;EACA5B,UAAU,CAAChI,SAAS,CAAC2J,UAAU,GAAG,SAASA,UAAUA,GAAG;IACtD,OAAO,IAAI,CAACvI,OAAO,CAAA;GACpB,CAAA;;AAED;AACA;AACA;AACA;EACA4G,UAAU,CAAChI,SAAS,CAACiI,QAAQ,GAAG,SAASA,QAAQA,GAAG;IAAA,IAAA+B,WAAA,EAAAC,cAAA,CAAA;AAClD,IAAA,IAAIpE,KAAK,CAAA;AACT,IAAA,IAAI1B,KAAK,GAAG,IAAI,CAACwF,UAAU,EAAE,CAAA;AAE7B,IAAA,IAAG,OAAOxF,KAAK,CAAC8D,QAAQ,KAAK,UAAU,EAAE;AACvCpC,MAAAA,KAAK,GAAG1B,KAAK,CAAC8D,QAAQ,EAAE,CAAA;AACzB,KAAA,MAAM,IAAG,CAAA,CAAA+B,WAAA,GAAA7F,KAAK,CAAC9C,IAAI,MAAA,IAAA,IAAA2I,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,WAAA,CAAYb,WAAW,EAAE,MAAK,UAAU,EAAE;MAClDtD,KAAK,GAAG1B,KAAK,CAAC0B,KAAK,CAAA;AACpB,KAAA,MAAM,IAAG,CAAA,CAAAoE,cAAA,GAAA9F,KAAK,CAAC+F,OAAO,MAAA,IAAA,IAAAD,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,cAAA,CAAed,WAAW,EAAE,MAAK,QAAQ,EAAE;AAAA,MAAA,IAAAgB,qBAAA,CAAA;MACnDtE,KAAK,GAAA,CAAAsE,qBAAA,GAAGC,kCAAkC,CAACjG,KAAK,CAAC,MAAAgG,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAzCA,qBAAA,CAA2CtE,KAAK,MAAAsE,IAAAA,IAAAA,qBAAA,uBAAhDA,qBAAA,CAAkDzJ,IAAI,EAAE,CAAA;KACjE,MAAM,IAAG,OAAOyD,KAAK,CAAC0B,KAAK,KAAK,WAAW,EAAE;MAC5CA,KAAK,GAAG1B,KAAK,CAAC0B,KAAK,CAAA;AACvB,KAAG,MAAM,IAAG1B,KAAK,CAACkG,iBAAiB,IAAI,OAAOlG,KAAK,CAACmG,WAAW,KAAK,WAAW,EAAE;MAC7EzE,KAAK,GAAG1B,KAAK,CAACmG,WAAW,CAAA;AAC1B,KAAA;AAED,IAAA,OAASvM,EAAE,CAACQ,MAAM,CAACsH,KAAK,CAAC,GAAGA,KAAK,CAACnF,IAAI,EAAE,GAAGmF,KAAK,CAAA;GACjD,CAAA;;AAED;AACA;AACA;EACAmC,UAAU,CAAChI,SAAS,CAACuK,QAAQ,GAAG,SAASA,QAAQA,GAAG;AAClD,IAAA,IAAAC,mBAAA,GAA+D,IAAI,CAACT,aAAa,EAAE;AAAlEpC,MAAAA,iBAAiB,GAAA6C,mBAAA,CAAA,SAAA,CAAA;MAASC,eAAe,GAAAD,mBAAA,CAAtBjB,KAAK,CAAA;IACzC,IAAMrI,UAAU,GAAG1B,KAAK,CAACkL,IAAI,CAAC/C,iBAAiB,CAAC7G,MAAM,EAAE,CAAC,CAACR,MAAM,CAACd,KAAK,CAACkL,IAAI,CAACD,eAAe,CAAC3J,MAAM,EAAE,CAAC,CAAC,CAAA;AAEtG,IAAA,IAAGI,UAAU,CAACP,MAAM,KAAK,CAAC,EAAE;AAC1B,MAAA,MAAM,IAAIe,SAAS,CAAClF,aAAa,CAACS,kBAAkB,CAAC,CAAA;AACtD,KAAA;AAED,IAAA,IAAA0N,gBAAA,GAAyD,IAAI,CAACtB,UAAU,EAAE;AAAzDzB,MAAAA,cAAc,GAAA+C,gBAAA,CAAA,SAAA,CAAA;MAASC,YAAY,GAAAD,gBAAA,CAAnBpB,KAAK,CAAA;IACtC,IAAM3I,OAAO,GAAGpB,KAAK,CAACkL,IAAI,CAAC9C,cAAc,CAAC9G,MAAM,EAAE,CAAC,CAACR,MAAM,CAACd,KAAK,CAACkL,IAAI,CAACE,YAAY,CAAC9J,MAAM,EAAE,CAAC,CAAC,CAAA;AAE7F,IAAA,IAAGF,OAAO,CAACD,MAAM,KAAK,CAAC,EAAE;AACvB,MAAA,MAAM,IAAIe,SAAS,CAAClF,aAAa,CAACQ,eAAe,CAAC,CAAA;AACnD,KAAA;AAED,IAAA,IAAIkI,IAAI,GAAG,IAAI,CAAC+D,OAAO,EAAE,CAAA;AACzB,IAAA,IAAM9E,KAAK,GAAG,IAAI,CAACwF,UAAU,EAAE,CAAA;AAC/B,IAAA,IAAM9D,KAAK,GAAG,IAAI,CAACoC,QAAQ,EAAE,CAAA;IAC7B,IAAMf,MAAM,GAAG,EAAE,CAAA;IAEjB,IAAGhC,IAAI,CAACiC,QAAQ,IAAIhD,KAAK,CAAC9C,IAAI,KAAK,UAAU,EAAE;AAC7C6F,MAAAA,MAAM,CAACG,OAAO,GAAGlD,KAAK,CAACkD,OAAO,CAAA;AAC/B,KAAA;IAED,IAAMnD,gBAAgB,GAAGhD,UAAU,CAAC2J,MAAM,CAAC,UAACzD,MAAM,EAAE0D,EAAE,EAAA;MAAA,OAAK1D,MAAM,IAAI0D,EAAE,CAACjF,KAAK,EAAEX,IAAI,EAAEkC,MAAM,EAAEF,MAAM,CAAC,CAAA;AAAA,KAAA,EAAE,IAAI,CAAC,CAAA;AAE3GtG,IAAAA,OAAO,CAACmK,OAAO,CAAC,SAASC,4BAA4BA,CAAAC,IAAA,EAAqB;AAAA,MAAA,IAAlBpJ,KAAK,GAAAoJ,IAAA,CAALpJ,KAAK;QAAEC,OAAO,GAAAmJ,IAAA,CAAPnJ,OAAO,CAAA;AACpE,MAAA,IAAGoC,gBAAgB,EAAE;QACnBrC,KAAK,CAACsC,KAAK,CAAC,CAAA;AAClB,OAAK,MAAM;QACLrC,OAAO,CAACqC,KAAK,CAAC,CAAA;AACf,OAAA;AACL,KAAG,CAAC,CAAA;AAEF,IAAA,OAAOD,gBAAgB,CAAA;GACxB,CAAA;;AAED;AACA;AACA;AACA;AACA;EACA8D,UAAU,CAAChI,SAAS,CAACkL,KAAK,GAAG,SAASA,KAAKA,CAACC,QAAQ,EAAE;AAAA,IAAA,IAAAC,KAAA,GAAA,IAAA,CAAA;AACpD,IAAA,IAAMjH,KAAK,GAAG,IAAI,CAACwF,UAAU,EAAE,CAAA;AAC/B,IAAA,IAAI0B,WAAW,CAAA;IAEf,QAAOlH,KAAK,CAAC9C,IAAI;AACjB,MAAA,KAAK,UAAU;AAAGgK,QAAAA,WAAW,GAAG,OAAO,CAAA;AAAE,QAAA,MAAA;AACzC,MAAA,KAAK,OAAO,CAAA;AACZ,MAAA,KAAK,UAAU,CAAA;AACf,MAAA,KAAK,MAAM,CAAA;AACX,MAAA;AAAkBA,QAAAA,WAAW,GAAG,OAAO,CAAA;AAAE,QAAA,MAAA;AACxC,KAAA;AAEDlH,IAAAA,KAAK,CAACmH,gBAAgB,CAACD,WAAW,EAAE,YAAA;AAAA,MAAA,OAAMD,KAAI,CAACb,QAAQ,CAACtD,CAAC,EAAEkE,QAAQ,CAAC,CAAA;AAAA,KAAA,CAAC,CAAC;GACvE,CAAA;;EAEDnD,UAAU,CAAChI,SAAS,CAACuL,KAAK,GAAG,SAASA,KAAKA,GAAG;AAC5C,IAAA,IAAMnK,OAAO,GAAG,IAAI,CAACuI,UAAU,EAAE,CAAA;AACjC,IAAA,IAAA6B,iBAAA,GAAyD,IAAI,CAACnC,UAAU,EAAE;AAAzDzB,MAAAA,cAAc,GAAA4D,iBAAA,CAAA,SAAA,CAAA;MAASZ,YAAY,GAAAY,iBAAA,CAAnBjC,KAAK,CAAA;IACtC,IAAM3I,OAAO,GAAGpB,KAAK,CAACkL,IAAI,CAAC9C,cAAc,CAAC9G,MAAM,EAAE,CAAC,CAACR,MAAM,CAACd,KAAK,CAACkL,IAAI,CAACE,YAAY,CAAC9J,MAAM,EAAE,CAAC,CAAC,CAAA;AAE7FM,IAAAA,OAAO,CAACuC,SAAS,CAACC,MAAM,CAAClG,aAAa,CAAC,CAAA;AACvC0D,IAAAA,OAAO,CAACuC,SAAS,CAACC,MAAM,CAAChG,wBAAwB,CAAC,CAAA;AAClDwD,IAAAA,OAAO,CAACuC,SAAS,CAACC,MAAM,CAACjG,qBAAqB,CAAC,CAAA;AAC/CyD,IAAAA,OAAO,CAACuC,SAAS,CAACC,MAAM,CAAC/F,qBAAqB,CAAC,CAAA;AAC/CuD,IAAAA,OAAO,CAACuC,SAAS,CAACC,MAAM,CAAC9F,uBAAuB,CAAC,CAAA;IAEjDgL,UAAU,CAAC1H,OAAO,CAAC,CAAA;AAEnB,IAAA,IAAGR,OAAO,CAACD,MAAM,GAAG,CAAC,EAAE;AACrBC,MAAAA,OAAO,CAACmK,OAAO,CAAC,SAASU,YAAYA,CAACxK,MAAM,EAAE;AAC5C,QAAA,IAAGlD,EAAE,CAAS,UAAA,CAAA,CAACkD,MAAM,CAAC+C,IAAI,CAAC,EAAE;AAC3B/C,UAAAA,MAAM,CAAC+C,IAAI,CAAC5C,OAAO,CAAC,CAAA;AACrB,SAAA;AACP,OAAK,CAAC,CAAA;AACH,KAAA;GACF,CAAA;;AAGD;;EAEA,SAASgJ,kCAAkCA,CAACsB,aAAa,EAAE;IACzD,OAAO;MACL7F,KAAK,EAAG6F,aAAa,CAAC7F,KAAK;MAC3B8F,IAAI,EAAID,aAAa,CAACE,OAAO,CAACF,aAAa,CAACG,aAAa,CAAC,CAACF,IAAAA;KAC5D,CAAA;AACH,GAAA;EAEA,SAAS7C,UAAUA,CAAC3E,KAAK,EAAE;IAAA,IAAA2H,gBAAA,EAAAC,iBAAA,CAAA;AACzB,IAAA,CAAAD,gBAAA,GAAA3H,KAAK,CAACR,SAAS,MAAA,IAAA,IAAAmI,gBAAA,KAAA,KAAA,CAAA,IAAfA,gBAAA,CAAiBjI,GAAG,CAACnG,aAAa,CAAC,CAAA;AACnC,IAAA,CAAAqO,iBAAA,GAAA5H,KAAK,CAACR,SAAS,MAAA,IAAA,IAAAoI,iBAAA,KAAA,KAAA,CAAA,IAAfA,iBAAA,CAAiBlI,GAAG,CAAClG,qBAAqB,CAAC,CAAA;AAC7C,GAAA;;;;;;;;;ACteA,EAAA,IAAMnB,aAAa,GAAGiB,oBAAA,EAA4B,CAAA;AAClD,EAAA,IAAAiF,UAAA,GAAqDC,cAAA,EAAqB;IAAlE5E,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IAAEmB,WAAW,GAAAwD,UAAA,CAAXxD,WAAW;IAAEC,WAAW,GAAAuD,UAAA,CAAXvD,WAAW;IAAEG,UAAU,GAAAoD,UAAA,CAAVpD,UAAU,CAAA;AAChD,EAAA,IAAM0I,UAAU,GAAGrD,iBAAA,EAAyB,CAAA;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAqH,EAAAA,QAAc,GAAG,SAASA,QAAQA,CAAC7H,KAAK,EAAEe,IAAI,EAAE;AAC9C,IAAA,IAAG,OAAOf,KAAK,KAAK,QAAQ,EAAE;AAC5BA,MAAAA,KAAK,GAAG8H,QAAQ,CAACC,cAAc,CAAC/H,KAAK,CAAC,CAAA;AACvC,KAAA;AAED,IAAA,IAAG,CAACpG,EAAE,CAACM,MAAM,CAAC8F,KAAK,CAAC,EAAE;MACpB,MAAM,IAAIzC,SAAS,CACjBlF,aAAa,CAACI,wBAAwB,CACnC+E,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAC3BA,OAAO,CAAC,QAAQ,EAAE,QAAQ,CACnC,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAG,CAACrC,UAAU,CAAC6E,KAAK,CAAC5C,EAAE,CAAC,IAAI,CAACrC,WAAW,CAACiF,KAAK,CAAC,EAAE;MAC/C,MAAM,IAAIzC,SAAS,CACjBlF,aAAa,CAACa,4BAA4B,CACvCsE,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CACvBA,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAC5BA,OAAO,CAAC,QAAQ,EAAE,sBAAsB,CACjD,CAAK,CAAA;AACF,KAAA;AAED,IAAA,IAAM+B,KAAK,GAAG,IAAI,CAACyI,QAAQ,CAAChN,WAAW,CAACgF,KAAK,CAAC5C,EAAE,CAAC,CAAC,CAAA;AAElD,IAAA,IAAGmC,KAAK,EAAE;AACR,MAAA,IAAG3F,EAAE,CAACM,MAAM,CAAC6G,IAAI,CAAC,EAAE;AAClBA,QAAAA,IAAI,CAACxB,KAAK,GAAGS,KAAK,CAAC5C,EAAE,CAAA;AAErB,QAAA,IAAI,CAACqH,OAAO,CAAC1D,IAAI,CAAC,CAAA;AACnB,OAAA;AACL,KAAG,MAAM;AACL,MAAA,IAAI,CAACkH,MAAM,CAACC,IAAI,CAAC,IAAIrE,UAAU,CAAC7D,KAAK,EAAEe,IAAI,CAAC,CAAC,CAAA;AAC9C,KAAA;AAED,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;;;;;;;;;AC5DD,EAAA,IAAM1I,aAAa,GAAGiB,oBAAA,EAA2B,CAAA;AACjD,EAAA,IAAAiF,UAAA,GAAwCC,cAAA,EAAoB;IAApD5E,EAAE,GAAA2E,UAAA,CAAF3E,EAAE;IAAEmB,WAAW,GAAAwD,UAAA,CAAXxD,WAAW;IAAEI,UAAU,GAAAoD,UAAA,CAAVpD,UAAU,CAAA;AACnC,EAAA,IAAAgE,WAAA,GAA+CqB,gBAAoB;IAA3D5B,iBAAiB,GAAAO,WAAA,CAAjBP,iBAAiB;IAAEC,eAAe,GAAAM,WAAA,CAAfN,eAAe,CAAA;AAE1C,EAAA,IAAMsJ,aAAa,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAA;EACjD,IAAMC,eAAe,GAAG,CACtB,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAChD,YAAY,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CAClE,CAAA;AAGaC,EAAAA,SAAA,GAAGC,SAAS,CAAA;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,SAASA,SAASA,CAACC,IAAI,EAAEC,KAAK,EAAE;AAAA,IAAA,IAAAvB,KAAA,GAAA,IAAA,CAAA;AAC9B,IAAA,IAAG,OAAOsB,IAAI,KAAK,QAAQ,EAAE;MAC3BA,IAAI,GAAGT,QAAQ,CAACC,cAAc,CAACQ,IAAI,CAAChM,IAAI,EAAE,CAAC,CAAA;AAC5C,KAAA;AAED,IAAA,IAAG,CAAC3C,EAAE,CAACM,MAAM,CAACqO,IAAI,CAAC,EAAE;MACnB,MAAM,IAAIhL,SAAS,CACjBlF,aAAa,CAACM,mBAAmB,CAC9B6E,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAC1BA,OAAO,CAAC,eAAe,EAAE,MAAM,CACxC,CAAK,CAAA;AACF,KAAA;IAED,IAAI,CAAC+K,IAAI,GAAGA,IAAI,CAAA;IAChB,IAAI,CAACN,MAAM,GAAG,EAAE,CAAA;AAChB,IAAA,IAAMQ,QAAQ,GAAGF,IAAI,CAACE,QAAQ,CAAA;AAE9B,IAAA,IAAGA,QAAQ,EAAE;MACXpN,KAAK,CAACkL,IAAI,CAACkC,QAAQ,CAAC,CAAC7B,OAAO,CAAC,UAAA5G,KAAK,EAAI;QACpC,IAAG7E,UAAU,CAAC6E,KAAK,CAAC5C,EAAE,CAAC,IAAIrC,WAAW,CAACiF,KAAK,CAAC,EAAE;AAC7CiH,UAAAA,KAAI,CAACY,QAAQ,CAAC7H,KAAK,CAAC,CAAA;AACrB,SAAA;AACP,OAAK,CAAC,CAAA;AACH,KAAA;AAED,IAAA,IAAGpG,EAAE,CAACC,KAAK,CAAC2O,KAAK,CAAC,EAAE;AACtB;AACA;AACIA,MAAAA,KAAK,CAAC5B,OAAO,CAAC,UAAA7F,IAAI,EAAI;AACpB,QAAA,IAAMf,KAAK,GAAGuI,IAAI,CAACG,aAAa,CAAA,GAAA,CAAAvM,MAAA,CAAK4E,IAAI,CAAC2D,OAAO,CAAE,CAAC,CAAA;QAEpD,IAAG1E,KAAK,IAAIiH,KAAI,CAACe,QAAQ,CAAChI,KAAK,CAAC5C,EAAE,CAAC,EAAE;AACnC6J,UAAAA,KAAI,CAACxC,OAAO,CAAC1D,IAAI,CAAC,CAAA;AACnB,SAAA;AACP,OAAK,CAAC,CAAA;AACH,KAAA;AACH,GAAA;EAEAuH,SAAS,CAACzM,SAAS,CAACgM,QAAQ,GAAG,SAASA,QAAQA,CAAC5K,OAAO,EAAE8D,IAAI,EAAE;AAC9D,IAAA,IAAM4H,YAAY,GAAGtN,KAAK,CAACkL,IAAI,CAAC,IAAI,CAACgC,IAAI,CAACE,QAAQ,CAAC,CAAC5L,GAAG,CAAC,UAAA+L,EAAE,EAAA;MAAA,OAAIA,EAAE,CAACxL,EAAE,CAAA;KAAC,CAAA,CAAA;IAEpE,IAAGuL,YAAY,CAAC9K,QAAQ,CAACZ,OAAO,CAACG,EAAE,CAAC,EAAE;MACpC+F,eAAA,EAA6B,CAACpH,IAAI,CAAC,IAAI,EAAEkB,OAAO,EAAE8D,IAAI,CAAC,CAAA;AACxD,KAAA;AAED,IAAA,OAAO,IAAI,CAAA;GACZ,CAAA;AAEDoH,EAAAA,aAAa,CAACvB,OAAO,CAAC,SAASiC,iBAAiBA,CAACC,MAAM,EAAE;AACvDjK,IAAAA,eAAe,CAACyJ,SAAS,EAAEQ,MAAM,CAAC,CAAA;AACpC,GAAC,CAAC,CAAA;AAEFV,EAAAA,eAAe,CAACxB,OAAO,CAAC,SAASmC,oBAAoBA,CAACD,MAAM,EAAE;AAC5DlK,IAAAA,iBAAiB,CAAC0J,SAAS,EAAEQ,MAAM,CAAC,CAAA;AACtC,GAAC,CAAC,CAAA;;;;;;;;;AC3FF,EAAA,IAAAvK,UAAA,GAA+CjF,gBAAoB;IAA3DsF,iBAAiB,GAAAL,UAAA,CAAjBK,iBAAiB;IAAEC,eAAe,GAAAN,UAAA,CAAfM,eAAe,CAAA;AAC1C,EAAA,IAAMyJ,SAAS,GAAG9J,gBAAA,EAAuB,CAAA;AAEzC,EAAA,IAAM2J,aAAa,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAA;AACjD,EAAA,IAAMC,eAAe,GAAG,CACtB,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,cAAc,EAAE,eAAe,EACjF,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CAC3F,CAAA;AAGaY,EAAAA,kBAAA,GAAGC,kBAAkB,CAAA;EAGnC,SAASA,kBAAkBA,GAAG;IAC5B,IAAI,CAAChB,MAAM,GAAG,EAAE,CAAA;IAChB,IAAI,CAACM,IAAI,GAAG,IAAI,CAAA;AAClB,GAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAU,kBAAkB,CAACpN,SAAS,CAACqN,OAAO,GAAG,SAASA,OAAOA,CAACX,IAAI,EAAEC,KAAK,EAAE;IACnE,IAAMH,SAAS,GAAG,IAAIC,SAAS,CAACC,IAAI,EAAEC,KAAK,CAAC,CAAA;AAE5C,IAAA,IAAI,CAACD,IAAI,GAAGF,SAAS,CAACE,IAAI,CAAA;AAE1B,IAAA,OAAOF,SAAS,CAAA;GACjB,CAAA;AAEDF,EAAAA,aAAa,CAACvB,OAAO,CAAC,SAASiC,iBAAiBA,CAACC,MAAM,EAAE;AACvDjK,IAAAA,eAAe,CAACoK,kBAAkB,EAAEH,MAAM,CAAC,CAAA;AAC7C,GAAC,CAAC,CAAA;AAEFV,EAAAA,eAAe,CAACxB,OAAO,CAAC,SAASmC,oBAAoBA,CAACD,MAAM,EAAE;AAC5DlK,IAAAA,iBAAiB,CAACqK,kBAAkB,EAAEH,MAAM,CAAC,CAAA;AAC/C,GAAC,CAAC,CAAA;;;;;;;;;ACvDF,EAAA,IAAMG,kBAAkB,GAAG3P,yBAAA,EAAiC,CAAA;AAE5D6P,EAAAA,GAAc,GAAGF,kBAAkB,CAAA;;;;ACFnC,IAAIG,UAAU,GAAGC,UAAU,EAAE,CAAA;AACY,YAAe,aAAaC,uBAAuB,CAACF,UAAU,CAAC;;;;"}